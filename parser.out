Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ANGLE
    BREAK
    DIFFER
    ELSE
    EQUALEQUAL
    FALSE
    FLOAT
    GEQUAL
    GREATER
    LCOR
    LEFT
    LEQUAL
    LESS
    LINE
    MINUS
    MULTIPLY
    NILL
    NOT
    OR
    PLUS
    POP
    PUSH
    RCOR
    RIGHT
    RULE
    TRUE
    WHILE

Grammar

Rule 0     S' -> Program
Rule 1     Program -> InstructionList
Rule 2     InstructionList -> Instruction END InstructionList
Rule 3     InstructionList -> Instruction END
Rule 4     Assignable -> INT
Rule 5     Instruction -> LSYS ID LBRACE Lsystem_body RBRACE
Rule 6     Instruction -> ID EQUAL Assignable
Rule 7     Instruction -> TYPE ID EQUAL Assignable
Rule 8     Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules
Rule 9     Ls_rules -> STRING ARROW STRING COMMA Ls_rules
Rule 10    Ls_rules -> STRING ARROW STRING
Rule 11    Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
Rule 12    Instruction -> BRUSH ID LBRACE Brush_body RBRACE
Rule 13    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 14    Instruction -> CANVAS ID LBRACE Canvas_body RBRACE
Rule 15    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 16    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
Rule 17    Instruction -> REPEAT INT LBRACE InstructionList RBRACE
Rule 18    Instruction -> IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

Terminals, with rules where they appear

ADD_RULE             : 11
AND                  : 
ANGLE                : 
ARROW                : 9 10
AXIOM                : 8
BOOL                 : 18
BREAK                : 
BRUSH                : 12
CANVAS               : 14
COL                  : 13 15
COLOR                : 13 15
COMMA                : 8 9 11 11 13 13 15 15 16 16 16 16 16
DIFFER               : 
DRAW                 : 16
ELSE                 : 
END                  : 2 3 18
EQUAL                : 6 7
EQUALEQUAL           : 
FALSE                : 
FLOAT                : 
GEQUAL               : 
GREATER              : 
HIGH                 : 15
ID                   : 5 6 7 11 12 14 16 16 16
IF                   : 18
INT                  : 4 13 13 15 15 16 16 16 17
LBRACE               : 5 12 14 17 18
LCOR                 : 
LEFT                 : 
LEQUAL               : 
LESS                 : 
LINE                 : 
LPAREN               : 11 16 18
LSYS                 : 5
MINUS                : 
MULTIPLY             : 
NILL                 : 
NOT                  : 
OR                   : 
PLUS                 : 
POP                  : 
PUSH                 : 
RBRACE               : 5 12 14 17 18
RCOR                 : 
REPEAT               : 17
RIGHT                : 
RPAREN               : 11 16 18
RULE                 : 
SIZE                 : 13
SPEED                : 13
STRING               : 8 9 9 10 10 11 11
TRUE                 : 
TWOPOINTS            : 8 13 13 13 15 15 15
TYPE                 : 7
WHILE                : 
WIDTH                : 15
error                : 

Nonterminals, with rules where they appear

Assignable           : 6 7
Brush_body           : 12
Canvas_body          : 14
Instruction          : 2 3
InstructionList      : 1 2 17 18
Ls_rules             : 8 9
Lsystem_body         : 5
Program              : 0

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . InstructionList
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (5) Instruction -> . LSYS ID LBRACE Lsystem_body RBRACE
    (6) Instruction -> . ID EQUAL Assignable
    (7) Instruction -> . TYPE ID EQUAL Assignable
    (11) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (12) Instruction -> . BRUSH ID LBRACE Brush_body RBRACE
    (14) Instruction -> . CANVAS ID LBRACE Canvas_body RBRACE
    (16) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (17) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (18) Instruction -> . IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

    LSYS            shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 6
    ADD_RULE        shift and go to state 7
    BRUSH           shift and go to state 8
    CANVAS          shift and go to state 9
    DRAW            shift and go to state 10
    REPEAT          shift and go to state 11
    IF              shift and go to state 12

    Program                        shift and go to state 1
    InstructionList                shift and go to state 2
    Instruction                    shift and go to state 3

state 1

    (0) S' -> Program .



state 2

    (1) Program -> InstructionList .

    $end            reduce using rule 1 (Program -> InstructionList .)


state 3

    (2) InstructionList -> Instruction . END InstructionList
    (3) InstructionList -> Instruction . END

    END             shift and go to state 13


state 4

    (5) Instruction -> LSYS . ID LBRACE Lsystem_body RBRACE

    ID              shift and go to state 14


state 5

    (6) Instruction -> ID . EQUAL Assignable

    EQUAL           shift and go to state 15


state 6

    (7) Instruction -> TYPE . ID EQUAL Assignable

    ID              shift and go to state 16


state 7

    (11) Instruction -> ADD_RULE . LPAREN ID COMMA STRING COMMA STRING RPAREN

    LPAREN          shift and go to state 17


state 8

    (12) Instruction -> BRUSH . ID LBRACE Brush_body RBRACE

    ID              shift and go to state 18


state 9

    (14) Instruction -> CANVAS . ID LBRACE Canvas_body RBRACE

    ID              shift and go to state 19


state 10

    (16) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN

    LPAREN          shift and go to state 20


state 11

    (17) Instruction -> REPEAT . INT LBRACE InstructionList RBRACE

    INT             shift and go to state 21


state 12

    (18) Instruction -> IF . LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

    LPAREN          shift and go to state 22


state 13

    (2) InstructionList -> Instruction END . InstructionList
    (3) InstructionList -> Instruction END .
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (5) Instruction -> . LSYS ID LBRACE Lsystem_body RBRACE
    (6) Instruction -> . ID EQUAL Assignable
    (7) Instruction -> . TYPE ID EQUAL Assignable
    (11) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (12) Instruction -> . BRUSH ID LBRACE Brush_body RBRACE
    (14) Instruction -> . CANVAS ID LBRACE Canvas_body RBRACE
    (16) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (17) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (18) Instruction -> . IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

    $end            reduce using rule 3 (InstructionList -> Instruction END .)
    RBRACE          reduce using rule 3 (InstructionList -> Instruction END .)
    LSYS            shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 6
    ADD_RULE        shift and go to state 7
    BRUSH           shift and go to state 8
    CANVAS          shift and go to state 9
    DRAW            shift and go to state 10
    REPEAT          shift and go to state 11
    IF              shift and go to state 12

    Instruction                    shift and go to state 3
    InstructionList                shift and go to state 23

state 14

    (5) Instruction -> LSYS ID . LBRACE Lsystem_body RBRACE

    LBRACE          shift and go to state 24


state 15

    (6) Instruction -> ID EQUAL . Assignable
    (4) Assignable -> . INT

    INT             shift and go to state 26

    Assignable                     shift and go to state 25

state 16

    (7) Instruction -> TYPE ID . EQUAL Assignable

    EQUAL           shift and go to state 27


state 17

    (11) Instruction -> ADD_RULE LPAREN . ID COMMA STRING COMMA STRING RPAREN

    ID              shift and go to state 28


state 18

    (12) Instruction -> BRUSH ID . LBRACE Brush_body RBRACE

    LBRACE          shift and go to state 29


state 19

    (14) Instruction -> CANVAS ID . LBRACE Canvas_body RBRACE

    LBRACE          shift and go to state 30


state 20

    (16) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN

    ID              shift and go to state 31


state 21

    (17) Instruction -> REPEAT INT . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 32


state 22

    (18) Instruction -> IF LPAREN . BOOL RPAREN LBRACE InstructionList RBRACE END

    BOOL            shift and go to state 33


state 23

    (2) InstructionList -> Instruction END InstructionList .

    $end            reduce using rule 2 (InstructionList -> Instruction END InstructionList .)
    RBRACE          reduce using rule 2 (InstructionList -> Instruction END InstructionList .)


state 24

    (5) Instruction -> LSYS ID LBRACE . Lsystem_body RBRACE
    (8) Lsystem_body -> . AXIOM TWOPOINTS STRING COMMA Ls_rules

    AXIOM           shift and go to state 35

    Lsystem_body                   shift and go to state 34

state 25

    (6) Instruction -> ID EQUAL Assignable .

    END             reduce using rule 6 (Instruction -> ID EQUAL Assignable .)


state 26

    (4) Assignable -> INT .

    END             reduce using rule 4 (Assignable -> INT .)


state 27

    (7) Instruction -> TYPE ID EQUAL . Assignable
    (4) Assignable -> . INT

    INT             shift and go to state 26

    Assignable                     shift and go to state 36

state 28

    (11) Instruction -> ADD_RULE LPAREN ID . COMMA STRING COMMA STRING RPAREN

    COMMA           shift and go to state 37


state 29

    (12) Instruction -> BRUSH ID LBRACE . Brush_body RBRACE
    (13) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    SIZE            shift and go to state 39

    Brush_body                     shift and go to state 38

state 30

    (14) Instruction -> CANVAS ID LBRACE . Canvas_body RBRACE
    (15) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    HIGH            shift and go to state 41

    Canvas_body                    shift and go to state 40

state 31

    (16) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN

    COMMA           shift and go to state 42


state 32

    (17) Instruction -> REPEAT INT LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (5) Instruction -> . LSYS ID LBRACE Lsystem_body RBRACE
    (6) Instruction -> . ID EQUAL Assignable
    (7) Instruction -> . TYPE ID EQUAL Assignable
    (11) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (12) Instruction -> . BRUSH ID LBRACE Brush_body RBRACE
    (14) Instruction -> . CANVAS ID LBRACE Canvas_body RBRACE
    (16) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (17) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (18) Instruction -> . IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

    LSYS            shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 6
    ADD_RULE        shift and go to state 7
    BRUSH           shift and go to state 8
    CANVAS          shift and go to state 9
    DRAW            shift and go to state 10
    REPEAT          shift and go to state 11
    IF              shift and go to state 12

    InstructionList                shift and go to state 43
    Instruction                    shift and go to state 3

state 33

    (18) Instruction -> IF LPAREN BOOL . RPAREN LBRACE InstructionList RBRACE END

    RPAREN          shift and go to state 44


state 34

    (5) Instruction -> LSYS ID LBRACE Lsystem_body . RBRACE

    RBRACE          shift and go to state 45


state 35

    (8) Lsystem_body -> AXIOM . TWOPOINTS STRING COMMA Ls_rules

    TWOPOINTS       shift and go to state 46


state 36

    (7) Instruction -> TYPE ID EQUAL Assignable .

    END             reduce using rule 7 (Instruction -> TYPE ID EQUAL Assignable .)


state 37

    (11) Instruction -> ADD_RULE LPAREN ID COMMA . STRING COMMA STRING RPAREN

    STRING          shift and go to state 47


state 38

    (12) Instruction -> BRUSH ID LBRACE Brush_body . RBRACE

    RBRACE          shift and go to state 48


state 39

    (13) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    TWOPOINTS       shift and go to state 49


state 40

    (14) Instruction -> CANVAS ID LBRACE Canvas_body . RBRACE

    RBRACE          shift and go to state 50


state 41

    (15) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 51


state 42

    (16) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN

    ID              shift and go to state 52


state 43

    (17) Instruction -> REPEAT INT LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 53


state 44

    (18) Instruction -> IF LPAREN BOOL RPAREN . LBRACE InstructionList RBRACE END

    LBRACE          shift and go to state 54


state 45

    (5) Instruction -> LSYS ID LBRACE Lsystem_body RBRACE .

    END             reduce using rule 5 (Instruction -> LSYS ID LBRACE Lsystem_body RBRACE .)


state 46

    (8) Lsystem_body -> AXIOM TWOPOINTS . STRING COMMA Ls_rules

    STRING          shift and go to state 55


state 47

    (11) Instruction -> ADD_RULE LPAREN ID COMMA STRING . COMMA STRING RPAREN

    COMMA           shift and go to state 56


state 48

    (12) Instruction -> BRUSH ID LBRACE Brush_body RBRACE .

    END             reduce using rule 12 (Instruction -> BRUSH ID LBRACE Brush_body RBRACE .)


state 49

    (13) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    INT             shift and go to state 57


state 50

    (14) Instruction -> CANVAS ID LBRACE Canvas_body RBRACE .

    END             reduce using rule 14 (Instruction -> CANVAS ID LBRACE Canvas_body RBRACE .)


state 51

    (15) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 58


state 52

    (16) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA INT RPAREN

    COMMA           shift and go to state 59


state 53

    (17) Instruction -> REPEAT INT LBRACE InstructionList RBRACE .

    END             reduce using rule 17 (Instruction -> REPEAT INT LBRACE InstructionList RBRACE .)


state 54

    (18) Instruction -> IF LPAREN BOOL RPAREN LBRACE . InstructionList RBRACE END
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (5) Instruction -> . LSYS ID LBRACE Lsystem_body RBRACE
    (6) Instruction -> . ID EQUAL Assignable
    (7) Instruction -> . TYPE ID EQUAL Assignable
    (11) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (12) Instruction -> . BRUSH ID LBRACE Brush_body RBRACE
    (14) Instruction -> . CANVAS ID LBRACE Canvas_body RBRACE
    (16) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (17) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (18) Instruction -> . IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END

    LSYS            shift and go to state 4
    ID              shift and go to state 5
    TYPE            shift and go to state 6
    ADD_RULE        shift and go to state 7
    BRUSH           shift and go to state 8
    CANVAS          shift and go to state 9
    DRAW            shift and go to state 10
    REPEAT          shift and go to state 11
    IF              shift and go to state 12

    InstructionList                shift and go to state 60
    Instruction                    shift and go to state 3

state 55

    (8) Lsystem_body -> AXIOM TWOPOINTS STRING . COMMA Ls_rules

    COMMA           shift and go to state 61


state 56

    (11) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA . STRING RPAREN

    STRING          shift and go to state 62


state 57

    (13) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    COMMA           shift and go to state 63


state 58

    (15) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 64


state 59

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA INT RPAREN

    ID              shift and go to state 65


state 60

    (18) Instruction -> IF LPAREN BOOL RPAREN LBRACE InstructionList . RBRACE END

    RBRACE          shift and go to state 66


state 61

    (8) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA . Ls_rules
    (9) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (10) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 67

    Ls_rules                       shift and go to state 68

state 62

    (11) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING . RPAREN

    RPAREN          shift and go to state 69


state 63

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    COLOR           shift and go to state 70


state 64

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    WIDTH           shift and go to state 71


state 65

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA INT RPAREN

    COMMA           shift and go to state 72


state 66

    (18) Instruction -> IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE . END

    END             shift and go to state 73


state 67

    (9) Ls_rules -> STRING . ARROW STRING COMMA Ls_rules
    (10) Ls_rules -> STRING . ARROW STRING

    ARROW           shift and go to state 74


state 68

    (8) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .

    RBRACE          reduce using rule 8 (Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .)


state 69

    (11) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN .

    END             reduce using rule 11 (Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN .)


state 70

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT

    TWOPOINTS       shift and go to state 75


state 71

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 76


state 72

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA INT RPAREN

    INT             shift and go to state 77


state 73

    (18) Instruction -> IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END .

    END             reduce using rule 18 (Instruction -> IF LPAREN BOOL RPAREN LBRACE InstructionList RBRACE END .)


state 74

    (9) Ls_rules -> STRING ARROW . STRING COMMA Ls_rules
    (10) Ls_rules -> STRING ARROW . STRING

    STRING          shift and go to state 78


state 75

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT

    COL             shift and go to state 79


state 76

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 80


state 77

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA INT RPAREN

    COMMA           shift and go to state 81


state 78

    (9) Ls_rules -> STRING ARROW STRING . COMMA Ls_rules
    (10) Ls_rules -> STRING ARROW STRING .

    COMMA           shift and go to state 82
    RBRACE          reduce using rule 10 (Ls_rules -> STRING ARROW STRING .)


state 79

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT

    COMMA           shift and go to state 83


state 80

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 84


state 81

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA INT RPAREN

    INT             shift and go to state 85


state 82

    (9) Ls_rules -> STRING ARROW STRING COMMA . Ls_rules
    (9) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (10) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 67

    Ls_rules                       shift and go to state 86

state 83

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT

    SPEED           shift and go to state 87


state 84

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 88


state 85

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA INT RPAREN

    COMMA           shift and go to state 89


state 86

    (9) Ls_rules -> STRING ARROW STRING COMMA Ls_rules .

    RBRACE          reduce using rule 9 (Ls_rules -> STRING ARROW STRING COMMA Ls_rules .)


state 87

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT

    TWOPOINTS       shift and go to state 90


state 88

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 91


state 89

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . INT RPAREN

    INT             shift and go to state 92


state 90

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT

    INT             shift and go to state 93


state 91

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 94


state 92

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 95


state 93

    (13) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 13 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 94

    (15) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 15 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 95

    (16) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .

    END             reduce using rule 16 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .)

