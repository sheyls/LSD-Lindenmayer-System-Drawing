Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LCOR
    RCOR

Grammar

Rule 0     S' -> Program
Rule 1     Program -> InstructionList
Rule 2     InstructionList -> Instruction END InstructionList
Rule 3     InstructionList -> Instruction END
Rule 4     Assignable -> INT
Rule 5     Assignable -> FLOAT
Rule 6     Assignable -> STRING
Rule 7     Assignable -> COL
Rule 8     ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp
Rule 9     ArithmeticOp -> ID PLUS ID
Rule 10    ArithmeticOp -> ID PLUS ArithmeticOp
Rule 11    ArithmeticOp -> ArithmeticOp PLUS ID
Rule 12    ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp
Rule 13    ArithmeticOp -> ID MINUS ID
Rule 14    ArithmeticOp -> ID MINUS ArithmeticOp
Rule 15    ArithmeticOp -> ArithmeticOp MINUS ID
Rule 16    ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp
Rule 17    ArithmeticOp -> ID MULTIPLY ID
Rule 18    ArithmeticOp -> ID MULTIPLY ArithmeticOp
Rule 19    ArithmeticOp -> ArithmeticOp MULTIPLY ID
Rule 20    ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp
Rule 21    ArithmeticOp -> ID DIFFER ID
Rule 22    ArithmeticOp -> ArithmeticOp DIFFER ID
Rule 23    ArithmeticOp -> ID DIFFER ArithmeticOp
Rule 24    ArithmeticOp -> Assignable
Rule 25    Instruction -> TYPE ID LBRACE Lsystem_body RBRACE
Rule 26    Instruction -> ID EQUAL ArithmeticOp
Rule 27    Instruction -> TYPE ID EQUAL ArithmeticOp
Rule 28    Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules
Rule 29    Ls_rules -> STRING ARROW STRING COMMA Ls_rules
Rule 30    Ls_rules -> STRING ARROW STRING
Rule 31    Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
Rule 32    Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
Rule 33    Instruction -> TYPE ID LBRACE Brush_body RBRACE
Rule 34    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 35    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 36    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 37    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 38    Instruction -> TYPE ID LBRACE Canvas_body RBRACE
Rule 39    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 40    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 41    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 42    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 43    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
Rule 44    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
Rule 45    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
Rule 46    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
Rule 47    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
Rule 48    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
Rule 49    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
Rule 50    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
Rule 51    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
Rule 52    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
Rule 53    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
Rule 54    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
Rule 55    Instruction -> REPEAT INT LBRACE InstructionList RBRACE
Rule 56    Instruction -> REPEAT ID LBRACE InstructionList RBRACE
Rule 57    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
Rule 58    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
Rule 59    Condition -> ArithmeticOp GEQUAL ArithmeticOp
Rule 60    Condition -> ID GEQUAL ID
Rule 61    Condition -> ID GEQUAL ArithmeticOp
Rule 62    Condition -> ArithmeticOp GEQUAL ID
Rule 63    Condition -> ID LEQUAL ID
Rule 64    Condition -> ID LEQUAL ArithmeticOp
Rule 65    Condition -> ArithmeticOp LEQUAL ID
Rule 66    Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp
Rule 67    Condition -> ID EQUALEQUAL ID
Rule 68    Condition -> ID EQUALEQUAL ArithmeticOp
Rule 69    Condition -> ArithmeticOp EQUALEQUAL ID
Rule 70    Condition -> ArithmeticOp GREATER ArithmeticOp
Rule 71    Condition -> ID GREATER ID
Rule 72    Condition -> ID GREATER ArithmeticOp
Rule 73    Condition -> ArithmeticOp GREATER ID
Rule 74    Condition -> ArithmeticOp LESS ArithmeticOp
Rule 75    Condition -> ID LESS ID
Rule 76    Condition -> ArithmeticOp LESS ID
Rule 77    Condition -> ID LESS ArithmeticOp
Rule 78    Condition -> BOOL

Terminals, with rules where they appear

ADD_RULE             : 31
ARROW                : 29 30 31
AXIOM                : 28
BOOL                 : 78
CHANGE_AXIOM         : 32
COL                  : 7 34 35 36 37 39 40 41 42
COLOR                : 34 35 36 37 39 40 41 42
COMMA                : 28 29 31 32 34 34 35 35 36 36 37 37 39 39 40 40 41 41 42 42 43 43 43 43 43 44 44 44 44 44 45 45 45 45 45 46 46 46 46 46 47 47 47 47 47 48 48 48 48 48 49 49 49 49 49 50 50 50 50 50 51 51 51 51 51 52 52 52 52 52 53 53 53 53 53 54 54 54 54 54
DIFFER               : 20 21 22 23
DRAW                 : 43 44 45 46 47 48 49 50 51 52 53 54
ELSE                 : 58
END                  : 2 3
EQUAL                : 26 27
EQUALEQUAL           : 66 67 68 69
FLOAT                : 5 43 46 49 52
GEQUAL               : 59 60 61 62
GREATER              : 70 71 72 73
HIGH                 : 39 40 41 42
ID                   : 9 9 10 11 13 13 14 15 17 17 18 19 21 21 22 23 25 26 27 31 32 33 35 36 37 37 38 40 40 41 42 43 43 43 44 44 44 45 45 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51 51 51 51 51 52 52 52 52 52 53 53 53 53 53 54 54 54 54 54 56 60 60 61 62 63 63 64 65 67 67 68 69 71 71 72 73 75 75 76 77
IF                   : 57 58
INT                  : 4 34 34 35 36 39 39 41 42 43 43 44 44 44 46 47 47 48 48 49 50 50 51 53 54 55
LBRACE               : 25 33 38 55 56 57 58 58
LCOR                 : 
LEQUAL               : 63 64 65
LESS                 : 74 75 76 77
LPAREN               : 31 32 43 44 45 46 47 48 49 50 51 52 53 54 57 58
MINUS                : 12 13 14 15
MULTIPLY             : 16 17 18 19
PLUS                 : 8 9 10 11
RBRACE               : 25 33 38 55 56 57 58 58
RCOR                 : 
REPEAT               : 55 56
RPAREN               : 31 32 43 44 45 46 47 48 49 50 51 52 53 54 57 58
SIZE                 : 34 35 36 37
SPEED                : 34 35 36 37
STRING               : 6 28 29 29 30 30 31 31 32
TWOPOINTS            : 28 34 34 34 35 35 35 36 36 36 37 37 37 39 39 39 40 40 40 41 41 41 42 42 42
TYPE                 : 25 27 33 38
WIDTH                : 39 40 41 42
error                : 

Nonterminals, with rules where they appear

ArithmeticOp         : 8 8 10 11 12 12 14 15 16 16 18 19 20 20 22 23 26 27 59 59 61 62 64 65 66 66 68 69 70 70 72 73 74 74 76 77
Assignable           : 24
Brush_body           : 33
Canvas_body          : 38
Condition            : 57 58
Instruction          : 2 3
InstructionList      : 1 2 55 56 57 58 58
Ls_rules             : 28 29
Lsystem_body         : 25
Program              : 0

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . InstructionList
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    Program                        shift and go to state 1
    InstructionList                shift and go to state 2
    Instruction                    shift and go to state 3

state 1

    (0) S' -> Program .



state 2

    (1) Program -> InstructionList .

    $end            reduce using rule 1 (Program -> InstructionList .)


state 3

    (2) InstructionList -> Instruction . END InstructionList
    (3) InstructionList -> Instruction . END

    END             shift and go to state 11


state 4

    (25) Instruction -> TYPE . ID LBRACE Lsystem_body RBRACE
    (27) Instruction -> TYPE . ID EQUAL ArithmeticOp
    (33) Instruction -> TYPE . ID LBRACE Brush_body RBRACE
    (38) Instruction -> TYPE . ID LBRACE Canvas_body RBRACE

    ID              shift and go to state 12


state 5

    (26) Instruction -> ID . EQUAL ArithmeticOp

    EQUAL           shift and go to state 13


state 6

    (31) Instruction -> ADD_RULE . LPAREN ID COMMA STRING ARROW STRING RPAREN

    LPAREN          shift and go to state 14


state 7

    (32) Instruction -> CHANGE_AXIOM . LPAREN ID COMMA STRING RPAREN

    LPAREN          shift and go to state 15


state 8

    (43) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    LPAREN          shift and go to state 16


state 9

    (55) Instruction -> REPEAT . INT LBRACE InstructionList RBRACE
    (56) Instruction -> REPEAT . ID LBRACE InstructionList RBRACE

    INT             shift and go to state 17
    ID              shift and go to state 18


state 10

    (57) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LPAREN          shift and go to state 19


state 11

    (2) InstructionList -> Instruction END . InstructionList
    (3) InstructionList -> Instruction END .
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    $end            reduce using rule 3 (InstructionList -> Instruction END .)
    RBRACE          reduce using rule 3 (InstructionList -> Instruction END .)
    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    Instruction                    shift and go to state 3
    InstructionList                shift and go to state 20

state 12

    (25) Instruction -> TYPE ID . LBRACE Lsystem_body RBRACE
    (27) Instruction -> TYPE ID . EQUAL ArithmeticOp
    (33) Instruction -> TYPE ID . LBRACE Brush_body RBRACE
    (38) Instruction -> TYPE ID . LBRACE Canvas_body RBRACE

    LBRACE          shift and go to state 21
    EQUAL           shift and go to state 22


state 13

    (26) Instruction -> ID EQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 23
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 24
    Assignable                     shift and go to state 25

state 14

    (31) Instruction -> ADD_RULE LPAREN . ID COMMA STRING ARROW STRING RPAREN

    ID              shift and go to state 30


state 15

    (32) Instruction -> CHANGE_AXIOM LPAREN . ID COMMA STRING RPAREN

    ID              shift and go to state 31


state 16

    (43) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 32


state 17

    (55) Instruction -> REPEAT INT . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 33


state 18

    (56) Instruction -> REPEAT ID . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 34


state 19

    (57) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (59) Condition -> . ArithmeticOp GEQUAL ArithmeticOp
    (60) Condition -> . ID GEQUAL ID
    (61) Condition -> . ID GEQUAL ArithmeticOp
    (62) Condition -> . ArithmeticOp GEQUAL ID
    (63) Condition -> . ID LEQUAL ID
    (64) Condition -> . ID LEQUAL ArithmeticOp
    (65) Condition -> . ArithmeticOp LEQUAL ID
    (66) Condition -> . ArithmeticOp EQUALEQUAL ArithmeticOp
    (67) Condition -> . ID EQUALEQUAL ID
    (68) Condition -> . ID EQUALEQUAL ArithmeticOp
    (69) Condition -> . ArithmeticOp EQUALEQUAL ID
    (70) Condition -> . ArithmeticOp GREATER ArithmeticOp
    (71) Condition -> . ID GREATER ID
    (72) Condition -> . ID GREATER ArithmeticOp
    (73) Condition -> . ArithmeticOp GREATER ID
    (74) Condition -> . ArithmeticOp LESS ArithmeticOp
    (75) Condition -> . ID LESS ID
    (76) Condition -> . ArithmeticOp LESS ID
    (77) Condition -> . ID LESS ArithmeticOp
    (78) Condition -> . BOOL
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 37
    BOOL            shift and go to state 38
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    Condition                      shift and go to state 35
    ArithmeticOp                   shift and go to state 36
    Assignable                     shift and go to state 25

state 20

    (2) InstructionList -> Instruction END InstructionList .

    $end            reduce using rule 2 (InstructionList -> Instruction END InstructionList .)
    RBRACE          reduce using rule 2 (InstructionList -> Instruction END InstructionList .)


state 21

    (25) Instruction -> TYPE ID LBRACE . Lsystem_body RBRACE
    (33) Instruction -> TYPE ID LBRACE . Brush_body RBRACE
    (38) Instruction -> TYPE ID LBRACE . Canvas_body RBRACE
    (28) Lsystem_body -> . AXIOM TWOPOINTS STRING COMMA Ls_rules
    (34) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (36) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    AXIOM           shift and go to state 42
    SIZE            shift and go to state 43
    HIGH            shift and go to state 44

    Lsystem_body                   shift and go to state 39
    Brush_body                     shift and go to state 40
    Canvas_body                    shift and go to state 41

state 22

    (27) Instruction -> TYPE ID EQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 23
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 45
    Assignable                     shift and go to state 25

state 23

    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 24

    (26) Instruction -> ID EQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 26 (Instruction -> ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 25

    (24) ArithmeticOp -> Assignable .

    PLUS            reduce using rule 24 (ArithmeticOp -> Assignable .)
    MINUS           reduce using rule 24 (ArithmeticOp -> Assignable .)
    MULTIPLY        reduce using rule 24 (ArithmeticOp -> Assignable .)
    DIFFER          reduce using rule 24 (ArithmeticOp -> Assignable .)
    END             reduce using rule 24 (ArithmeticOp -> Assignable .)
    GEQUAL          reduce using rule 24 (ArithmeticOp -> Assignable .)
    LEQUAL          reduce using rule 24 (ArithmeticOp -> Assignable .)
    EQUALEQUAL      reduce using rule 24 (ArithmeticOp -> Assignable .)
    GREATER         reduce using rule 24 (ArithmeticOp -> Assignable .)
    LESS            reduce using rule 24 (ArithmeticOp -> Assignable .)
    RPAREN          reduce using rule 24 (ArithmeticOp -> Assignable .)


state 26

    (4) Assignable -> INT .

    PLUS            reduce using rule 4 (Assignable -> INT .)
    MINUS           reduce using rule 4 (Assignable -> INT .)
    MULTIPLY        reduce using rule 4 (Assignable -> INT .)
    DIFFER          reduce using rule 4 (Assignable -> INT .)
    END             reduce using rule 4 (Assignable -> INT .)
    GEQUAL          reduce using rule 4 (Assignable -> INT .)
    LEQUAL          reduce using rule 4 (Assignable -> INT .)
    EQUALEQUAL      reduce using rule 4 (Assignable -> INT .)
    GREATER         reduce using rule 4 (Assignable -> INT .)
    LESS            reduce using rule 4 (Assignable -> INT .)
    RPAREN          reduce using rule 4 (Assignable -> INT .)


state 27

    (5) Assignable -> FLOAT .

    PLUS            reduce using rule 5 (Assignable -> FLOAT .)
    MINUS           reduce using rule 5 (Assignable -> FLOAT .)
    MULTIPLY        reduce using rule 5 (Assignable -> FLOAT .)
    DIFFER          reduce using rule 5 (Assignable -> FLOAT .)
    END             reduce using rule 5 (Assignable -> FLOAT .)
    GEQUAL          reduce using rule 5 (Assignable -> FLOAT .)
    LEQUAL          reduce using rule 5 (Assignable -> FLOAT .)
    EQUALEQUAL      reduce using rule 5 (Assignable -> FLOAT .)
    GREATER         reduce using rule 5 (Assignable -> FLOAT .)
    LESS            reduce using rule 5 (Assignable -> FLOAT .)
    RPAREN          reduce using rule 5 (Assignable -> FLOAT .)


state 28

    (6) Assignable -> STRING .

    PLUS            reduce using rule 6 (Assignable -> STRING .)
    MINUS           reduce using rule 6 (Assignable -> STRING .)
    MULTIPLY        reduce using rule 6 (Assignable -> STRING .)
    DIFFER          reduce using rule 6 (Assignable -> STRING .)
    END             reduce using rule 6 (Assignable -> STRING .)
    GEQUAL          reduce using rule 6 (Assignable -> STRING .)
    LEQUAL          reduce using rule 6 (Assignable -> STRING .)
    EQUALEQUAL      reduce using rule 6 (Assignable -> STRING .)
    GREATER         reduce using rule 6 (Assignable -> STRING .)
    LESS            reduce using rule 6 (Assignable -> STRING .)
    RPAREN          reduce using rule 6 (Assignable -> STRING .)


state 29

    (7) Assignable -> COL .

    PLUS            reduce using rule 7 (Assignable -> COL .)
    MINUS           reduce using rule 7 (Assignable -> COL .)
    MULTIPLY        reduce using rule 7 (Assignable -> COL .)
    DIFFER          reduce using rule 7 (Assignable -> COL .)
    END             reduce using rule 7 (Assignable -> COL .)
    GEQUAL          reduce using rule 7 (Assignable -> COL .)
    LEQUAL          reduce using rule 7 (Assignable -> COL .)
    EQUALEQUAL      reduce using rule 7 (Assignable -> COL .)
    GREATER         reduce using rule 7 (Assignable -> COL .)
    LESS            reduce using rule 7 (Assignable -> COL .)
    RPAREN          reduce using rule 7 (Assignable -> COL .)


state 30

    (31) Instruction -> ADD_RULE LPAREN ID . COMMA STRING ARROW STRING RPAREN

    COMMA           shift and go to state 54


state 31

    (32) Instruction -> CHANGE_AXIOM LPAREN ID . COMMA STRING RPAREN

    COMMA           shift and go to state 55


state 32

    (43) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 56


state 33

    (55) Instruction -> REPEAT INT LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 57
    Instruction                    shift and go to state 3

state 34

    (56) Instruction -> REPEAT ID LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 58
    Instruction                    shift and go to state 3

state 35

    (57) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    RPAREN          shift and go to state 59


state 36

    (59) Condition -> ArithmeticOp . GEQUAL ArithmeticOp
    (62) Condition -> ArithmeticOp . GEQUAL ID
    (65) Condition -> ArithmeticOp . LEQUAL ID
    (66) Condition -> ArithmeticOp . EQUALEQUAL ArithmeticOp
    (69) Condition -> ArithmeticOp . EQUALEQUAL ID
    (70) Condition -> ArithmeticOp . GREATER ArithmeticOp
    (73) Condition -> ArithmeticOp . GREATER ID
    (74) Condition -> ArithmeticOp . LESS ArithmeticOp
    (76) Condition -> ArithmeticOp . LESS ID
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    GEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    EQUALEQUAL      shift and go to state 62
    GREATER         shift and go to state 63
    LESS            shift and go to state 64
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 37

    (60) Condition -> ID . GEQUAL ID
    (61) Condition -> ID . GEQUAL ArithmeticOp
    (63) Condition -> ID . LEQUAL ID
    (64) Condition -> ID . LEQUAL ArithmeticOp
    (67) Condition -> ID . EQUALEQUAL ID
    (68) Condition -> ID . EQUALEQUAL ArithmeticOp
    (71) Condition -> ID . GREATER ID
    (72) Condition -> ID . GREATER ArithmeticOp
    (75) Condition -> ID . LESS ID
    (77) Condition -> ID . LESS ArithmeticOp
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    GEQUAL          shift and go to state 65
    LEQUAL          shift and go to state 66
    EQUALEQUAL      shift and go to state 67
    GREATER         shift and go to state 68
    LESS            shift and go to state 69
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 38

    (78) Condition -> BOOL .

    RPAREN          reduce using rule 78 (Condition -> BOOL .)


state 39

    (25) Instruction -> TYPE ID LBRACE Lsystem_body . RBRACE

    RBRACE          shift and go to state 70


state 40

    (33) Instruction -> TYPE ID LBRACE Brush_body . RBRACE

    RBRACE          shift and go to state 71


state 41

    (38) Instruction -> TYPE ID LBRACE Canvas_body . RBRACE

    RBRACE          shift and go to state 72


state 42

    (28) Lsystem_body -> AXIOM . TWOPOINTS STRING COMMA Ls_rules

    TWOPOINTS       shift and go to state 73


state 43

    (34) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (36) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 74


state 44

    (39) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 75


state 45

    (27) Instruction -> TYPE ID EQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 27 (Instruction -> TYPE ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 46

    (9) ArithmeticOp -> ID PLUS . ID
    (10) ArithmeticOp -> ID PLUS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 76
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 77
    Assignable                     shift and go to state 25

state 47

    (13) ArithmeticOp -> ID MINUS . ID
    (14) ArithmeticOp -> ID MINUS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 78
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 79
    Assignable                     shift and go to state 25

state 48

    (17) ArithmeticOp -> ID MULTIPLY . ID
    (18) ArithmeticOp -> ID MULTIPLY . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 80
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 81
    Assignable                     shift and go to state 25

state 49

    (21) ArithmeticOp -> ID DIFFER . ID
    (23) ArithmeticOp -> ID DIFFER . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 82
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 83
    Assignable                     shift and go to state 25

state 50

    (8) ArithmeticOp -> ArithmeticOp PLUS . ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp PLUS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 85
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 84
    Assignable                     shift and go to state 25

state 51

    (12) ArithmeticOp -> ArithmeticOp MINUS . ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp MINUS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 87
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 86
    Assignable                     shift and go to state 25

state 52

    (16) ArithmeticOp -> ArithmeticOp MULTIPLY . ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp MULTIPLY . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 89
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 88
    Assignable                     shift and go to state 25

state 53

    (20) ArithmeticOp -> ArithmeticOp DIFFER . ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp DIFFER . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 91
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 90
    Assignable                     shift and go to state 25

state 54

    (31) Instruction -> ADD_RULE LPAREN ID COMMA . STRING ARROW STRING RPAREN

    STRING          shift and go to state 92


state 55

    (32) Instruction -> CHANGE_AXIOM LPAREN ID COMMA . STRING RPAREN

    STRING          shift and go to state 93


state 56

    (43) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 94


state 57

    (55) Instruction -> REPEAT INT LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 95


state 58

    (56) Instruction -> REPEAT ID LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 96


state 59

    (57) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE
    (58) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 97


state 60

    (59) Condition -> ArithmeticOp GEQUAL . ArithmeticOp
    (62) Condition -> ArithmeticOp GEQUAL . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 99
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 98
    Assignable                     shift and go to state 25

state 61

    (65) Condition -> ArithmeticOp LEQUAL . ID

    ID              shift and go to state 100


state 62

    (66) Condition -> ArithmeticOp EQUALEQUAL . ArithmeticOp
    (69) Condition -> ArithmeticOp EQUALEQUAL . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 102
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 101
    Assignable                     shift and go to state 25

state 63

    (70) Condition -> ArithmeticOp GREATER . ArithmeticOp
    (73) Condition -> ArithmeticOp GREATER . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 104
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 103
    Assignable                     shift and go to state 25

state 64

    (74) Condition -> ArithmeticOp LESS . ArithmeticOp
    (76) Condition -> ArithmeticOp LESS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 106
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 105
    Assignable                     shift and go to state 25

state 65

    (60) Condition -> ID GEQUAL . ID
    (61) Condition -> ID GEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 107
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 108
    Assignable                     shift and go to state 25

state 66

    (63) Condition -> ID LEQUAL . ID
    (64) Condition -> ID LEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 109
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 110
    Assignable                     shift and go to state 25

state 67

    (67) Condition -> ID EQUALEQUAL . ID
    (68) Condition -> ID EQUALEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 111
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 112
    Assignable                     shift and go to state 25

state 68

    (71) Condition -> ID GREATER . ID
    (72) Condition -> ID GREATER . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 113
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 114
    Assignable                     shift and go to state 25

state 69

    (75) Condition -> ID LESS . ID
    (77) Condition -> ID LESS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 115
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 116
    Assignable                     shift and go to state 25

state 70

    (25) Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .

    END             reduce using rule 25 (Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .)


state 71

    (33) Instruction -> TYPE ID LBRACE Brush_body RBRACE .

    END             reduce using rule 33 (Instruction -> TYPE ID LBRACE Brush_body RBRACE .)


state 72

    (38) Instruction -> TYPE ID LBRACE Canvas_body RBRACE .

    END             reduce using rule 38 (Instruction -> TYPE ID LBRACE Canvas_body RBRACE .)


state 73

    (28) Lsystem_body -> AXIOM TWOPOINTS . STRING COMMA Ls_rules

    STRING          shift and go to state 117


state 74

    (34) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (36) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    INT             shift and go to state 118
    ID              shift and go to state 119


state 75

    (39) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 120
    ID              shift and go to state 121


state 76

    (9) ArithmeticOp -> ID PLUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    GEQUAL          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    LEQUAL          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    EQUALEQUAL      reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    GREATER         reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    LESS            reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    RPAREN          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! DIFFER          [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]


state 77

    (10) ArithmeticOp -> ID PLUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GREATER         reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LESS            reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    RPAREN          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]


state 78

    (13) ArithmeticOp -> ID MINUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    GEQUAL          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    LEQUAL          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    EQUALEQUAL      reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    GREATER         reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    LESS            reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    RPAREN          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! MINUS           [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! DIFFER          [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]


state 79

    (14) ArithmeticOp -> ID MINUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GREATER         reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LESS            reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    RPAREN          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]


state 80

    (17) ArithmeticOp -> ID MULTIPLY ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    GEQUAL          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    LEQUAL          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    GREATER         reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    LESS            reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    RPAREN          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]


state 81

    (18) ArithmeticOp -> ID MULTIPLY ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]


state 82

    (21) ArithmeticOp -> ID DIFFER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    GEQUAL          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    LEQUAL          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    EQUALEQUAL      reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    GREATER         reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    LESS            reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    RPAREN          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MINUS           [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]


state 83

    (23) ArithmeticOp -> ID DIFFER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GREATER         reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LESS            reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]


state 84

    (8) ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GREATER         reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LESS            reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    RPAREN          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]


state 85

    (11) ArithmeticOp -> ArithmeticOp PLUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GEQUAL          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LEQUAL          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    EQUALEQUAL      reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GREATER         reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LESS            reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    RPAREN          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MINUS           [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! DIFFER          [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]


state 86

    (12) ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GREATER         reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LESS            reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    RPAREN          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]


state 87

    (15) ArithmeticOp -> ArithmeticOp MINUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GEQUAL          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LEQUAL          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    EQUALEQUAL      reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GREATER         reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LESS            reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    RPAREN          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MINUS           [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! DIFFER          [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]


state 88

    (16) ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]


state 89

    (19) ArithmeticOp -> ArithmeticOp MULTIPLY ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GEQUAL          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LEQUAL          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GREATER         reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LESS            reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    RPAREN          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]


state 90

    (20) ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GREATER         reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LESS            reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53

  ! PLUS            [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]


state 91

    (22) ArithmeticOp -> ArithmeticOp DIFFER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    EQUALEQUAL      reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GREATER         reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LESS            reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    RPAREN          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49

  ! PLUS            [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MINUS           [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]


state 92

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING . ARROW STRING RPAREN

    ARROW           shift and go to state 122


state 93

    (32) Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING . RPAREN

    RPAREN          shift and go to state 123


state 94

    (43) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 124


state 95

    (55) Instruction -> REPEAT INT LBRACE InstructionList RBRACE .

    END             reduce using rule 55 (Instruction -> REPEAT INT LBRACE InstructionList RBRACE .)


state 96

    (56) Instruction -> REPEAT ID LBRACE InstructionList RBRACE .

    END             reduce using rule 56 (Instruction -> REPEAT ID LBRACE InstructionList RBRACE .)


state 97

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE
    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 125
    Instruction                    shift and go to state 3

state 98

    (59) Condition -> ArithmeticOp GEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 59 (Condition -> ArithmeticOp GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 99

    (62) Condition -> ArithmeticOp GEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 62 (Condition -> ArithmeticOp GEQUAL ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 100

    (65) Condition -> ArithmeticOp LEQUAL ID .

    RPAREN          reduce using rule 65 (Condition -> ArithmeticOp LEQUAL ID .)


state 101

    (66) Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 66 (Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 102

    (69) Condition -> ArithmeticOp EQUALEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 69 (Condition -> ArithmeticOp EQUALEQUAL ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 103

    (70) Condition -> ArithmeticOp GREATER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 70 (Condition -> ArithmeticOp GREATER ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 104

    (73) Condition -> ArithmeticOp GREATER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 73 (Condition -> ArithmeticOp GREATER ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 105

    (74) Condition -> ArithmeticOp LESS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 74 (Condition -> ArithmeticOp LESS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 106

    (76) Condition -> ArithmeticOp LESS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 76 (Condition -> ArithmeticOp LESS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 107

    (60) Condition -> ID GEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 60 (Condition -> ID GEQUAL ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 108

    (61) Condition -> ID GEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 61 (Condition -> ID GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 109

    (63) Condition -> ID LEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 63 (Condition -> ID LEQUAL ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 110

    (64) Condition -> ID LEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 64 (Condition -> ID LEQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 111

    (67) Condition -> ID EQUALEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 67 (Condition -> ID EQUALEQUAL ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 112

    (68) Condition -> ID EQUALEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 68 (Condition -> ID EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 113

    (71) Condition -> ID GREATER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 71 (Condition -> ID GREATER ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 114

    (72) Condition -> ID GREATER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 72 (Condition -> ID GREATER ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 115

    (75) Condition -> ID LESS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 75 (Condition -> ID LESS ID .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULTIPLY        shift and go to state 48
    DIFFER          shift and go to state 49


state 116

    (77) Condition -> ID LESS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 77 (Condition -> ID LESS ArithmeticOp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    MULTIPLY        shift and go to state 52
    DIFFER          shift and go to state 53


state 117

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING . COMMA Ls_rules

    COMMA           shift and go to state 126


state 118

    (34) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 127


state 119

    (36) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 128


state 120

    (39) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 129


state 121

    (40) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 130


state 122

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW . STRING RPAREN

    STRING          shift and go to state 131


state 123

    (32) Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN .

    END             reduce using rule 32 (Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN .)


state 124

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 132


state 125

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE
    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE ELSE LBRACE InstructionList RBRACE

    RBRACE          shift and go to state 133


state 126

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA . Ls_rules
    (29) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 134

    Ls_rules                       shift and go to state 135

state 127

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 136


state 128

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 137


state 129

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    WIDTH           shift and go to state 138


state 130

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    WIDTH           shift and go to state 139


state 131

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING . RPAREN

    RPAREN          shift and go to state 140


state 132

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 141


state 133

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .
    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE . ELSE LBRACE InstructionList RBRACE

    END             reduce using rule 57 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .)
    ELSE            shift and go to state 142


state 134

    (29) Ls_rules -> STRING . ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> STRING . ARROW STRING

    ARROW           shift and go to state 143


state 135

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .

    RBRACE          reduce using rule 28 (Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .)


state 136

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 144


state 137

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 145


state 138

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 146


state 139

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 147


state 140

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN .

    END             reduce using rule 31 (Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN .)


state 141

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA ID RPAREN

    INT             shift and go to state 149
    ID              shift and go to state 148


state 142

    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 150


state 143

    (29) Ls_rules -> STRING ARROW . STRING COMMA Ls_rules
    (30) Ls_rules -> STRING ARROW . STRING

    STRING          shift and go to state 151


state 144

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 152


state 145

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 153


state 146

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 154
    ID              shift and go to state 155


state 147

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL
    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL

    ID              shift and go to state 156
    INT             shift and go to state 157


state 148

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA ID RPAREN

    COMMA           shift and go to state 158


state 149

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 159


state 150

    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (32) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (33) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (38) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (55) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (56) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (58) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    CHANGE_AXIOM    shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 160
    Instruction                    shift and go to state 3

state 151

    (29) Ls_rules -> STRING ARROW STRING . COMMA Ls_rules
    (30) Ls_rules -> STRING ARROW STRING .

    COMMA           shift and go to state 161
    RBRACE          reduce using rule 30 (Ls_rules -> STRING ARROW STRING .)


state 152

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 162


state 153

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 163


state 154

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 164


state 155

    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 165


state 156

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 166


state 157

    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 167


state 158

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA ID RPAREN

    ID              shift and go to state 168
    FLOAT           shift and go to state 169
    INT             shift and go to state 170


state 159

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA ID RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA ID RPAREN

    FLOAT           shift and go to state 173
    INT             shift and go to state 172
    ID              shift and go to state 171


state 160

    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 174


state 161

    (29) Ls_rules -> STRING ARROW STRING COMMA . Ls_rules
    (29) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 134

    Ls_rules                       shift and go to state 175

state 162

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 176


state 163

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 177


state 164

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 178


state 165

    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 179


state 166

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 180


state 167

    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 181


state 168

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA INT RPAREN

    COMMA           shift and go to state 182


state 169

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 183


state 170

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 184


state 171

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA ID RPAREN

    COMMA           shift and go to state 185


state 172

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA INT RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 186


state 173

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 187


state 174

    (58) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .

    END             reduce using rule 58 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .)


state 175

    (29) Ls_rules -> STRING ARROW STRING COMMA Ls_rules .

    RBRACE          reduce using rule 29 (Ls_rules -> STRING ARROW STRING COMMA Ls_rules .)


state 176

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 188


state 177

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 189


state 178

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 190


state 179

    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 191


state 180

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 192


state 181

    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 193


state 182

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . INT RPAREN

    ID              shift and go to state 194
    INT             shift and go to state 195


state 183

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 197
    ID              shift and go to state 196


state 184

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 199
    ID              shift and go to state 198


state 185

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . ID RPAREN

    INT             shift and go to state 201
    ID              shift and go to state 200


state 186

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . INT RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 203
    ID              shift and go to state 202


state 187

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 205
    ID              shift and go to state 204


state 188

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 206
    ID              shift and go to state 207


state 189

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 209
    ID              shift and go to state 208


state 190

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 210


state 191

    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 211


state 192

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 212


state 193

    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 213


state 194

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 214


state 195

    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 215


state 196

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 216


state 197

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 217


state 198

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 218


state 199

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 219


state 200

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 220


state 201

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 221


state 202

    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 222


state 203

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 223


state 204

    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 224


state 205

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 225


state 206

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 34 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 207

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 35 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 208

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 37 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 209

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 36 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 210

    (39) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 39 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 211

    (41) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 41 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 212

    (40) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 40 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 213

    (42) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 42 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 214

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .

    END             reduce using rule 45 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .)


state 215

    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .

    END             reduce using rule 51 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .)


state 216

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 52 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .)


state 217

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 46 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .)


state 218

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .

    END             reduce using rule 53 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .)


state 219

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .

    END             reduce using rule 47 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .)


state 220

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .

    END             reduce using rule 54 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .)


state 221

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .

    END             reduce using rule 48 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .)


state 222

    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .

    END             reduce using rule 50 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .)


state 223

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .

    END             reduce using rule 44 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .)


state 224

    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 49 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .)


state 225

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 43 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 76 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 77 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 79 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 80 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 82 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 84 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 85 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 86 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 87 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 88 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 89 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 90 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 91 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 91 resolved as shift
