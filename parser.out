Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> InstructionList
Rule 2     InstructionList -> Instruction END InstructionList
Rule 3     InstructionList -> Instruction END
Rule 4     Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
Rule 5     Assignable -> INT
Rule 6     Assignable -> FLOAT
Rule 7     Assignable -> STRING
Rule 8     Assignable -> BOOL
Rule 9     Assignable -> COL
Rule 10    ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp
Rule 11    ArithmeticOp -> ID PLUS ID
Rule 12    ArithmeticOp -> ID PLUS ArithmeticOp
Rule 13    ArithmeticOp -> ArithmeticOp PLUS ID
Rule 14    ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp
Rule 15    ArithmeticOp -> ID MINUS ID
Rule 16    ArithmeticOp -> ID MINUS ArithmeticOp
Rule 17    ArithmeticOp -> ArithmeticOp MINUS ID
Rule 18    ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp
Rule 19    ArithmeticOp -> ID MULTIPLY ID
Rule 20    ArithmeticOp -> ID MULTIPLY ArithmeticOp
Rule 21    ArithmeticOp -> ArithmeticOp MULTIPLY ID
Rule 22    ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp
Rule 23    ArithmeticOp -> ID DIFFER ID
Rule 24    ArithmeticOp -> ArithmeticOp DIFFER ID
Rule 25    ArithmeticOp -> ID DIFFER ArithmeticOp
Rule 26    ArithmeticOp -> Assignable
Rule 27    Instruction -> TYPE ID LBRACE Lsystem_body RBRACE
Rule 28    Instruction -> ID EQUAL ArithmeticOp
Rule 29    Instruction -> TYPE ID EQUAL ArithmeticOp
Rule 30    Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules
Rule 31    Ls_rules -> STRING ARROW STRING COMMA Ls_rules
Rule 32    Ls_rules -> STRING ARROW STRING
Rule 33    Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
Rule 34    Instruction -> TYPE ID LBRACE Brush_body RBRACE
Rule 35    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 36    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 37    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 38    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 39    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
Rule 40    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
Rule 41    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
Rule 42    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
Rule 43    Instruction -> TYPE ID LBRACE Canvas_body RBRACE
Rule 44    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 45    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 46    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 47    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 48    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
Rule 49    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
Rule 50    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
Rule 51    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
Rule 52    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
Rule 53    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
Rule 54    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
Rule 55    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
Rule 56    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
Rule 57    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
Rule 58    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
Rule 59    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
Rule 60    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
Rule 61    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
Rule 62    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
Rule 63    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
Rule 64    Instruction -> REPEAT INT LBRACE InstructionList RBRACE
Rule 65    Instruction -> REPEAT ID LBRACE InstructionList RBRACE
Rule 66    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
Rule 67    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
Rule 68    Condition -> ArithmeticOp GEQUAL ArithmeticOp
Rule 69    Condition -> ID GEQUAL ID
Rule 70    Condition -> ID GEQUAL ArithmeticOp
Rule 71    Condition -> ArithmeticOp GEQUAL ID
Rule 72    Condition -> ID LEQUAL ID
Rule 73    Condition -> ID LEQUAL ArithmeticOp
Rule 74    Condition -> ArithmeticOp LEQUAL ID
Rule 75    Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp
Rule 76    Condition -> ID EQUALEQUAL ID
Rule 77    Condition -> ID EQUALEQUAL ArithmeticOp
Rule 78    Condition -> ArithmeticOp EQUALEQUAL ID
Rule 79    Condition -> ArithmeticOp GREATER ArithmeticOp
Rule 80    Condition -> ID GREATER ID
Rule 81    Condition -> ID GREATER ArithmeticOp
Rule 82    Condition -> ArithmeticOp GREATER ID
Rule 83    Condition -> ArithmeticOp LESS ArithmeticOp
Rule 84    Condition -> ID LESS ID
Rule 85    Condition -> ArithmeticOp LESS ID
Rule 86    Condition -> ID LESS ArithmeticOp
Rule 87    Condition -> BOOL
Rule 88    Condition -> ID

Terminals, with rules where they appear

ADD_RULE             : 33
ARROW                : 31 32 33
AXIOM                : 30
BOOL                 : 8 87
CHANGE_AXIOM         : 4
COL                  : 9 35 36 37 38 44 45 46 47
COLOR                : 35 36 37 38 39 40 41 42 44 45 46 47 48 49 50 51
COMMA                : 4 30 31 33 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 52 52 52 53 53 53 53 53 54 54 54 54 54 55 55 55 55 55 56 56 56 56 56 57 57 57 57 57 58 58 58 58 58 59 59 59 59 59 60 60 60 60 60 61 61 61 61 61 62 62 62 62 62 63 63 63 63 63
DIFFER               : 22 23 24 25
DRAW                 : 52 53 54 55 56 57 58 59 60 61 62 63
ELSE                 : 67
END                  : 2 3
EQUAL                : 28 29
EQUALEQUAL           : 75 76 77 78
FLOAT                : 6 52 55 58 61
GEQUAL               : 68 69 70 71
GREATER              : 79 80 81 82
HIGH                 : 44 45 46 47 48 49 50 51
ID                   : 4 11 11 12 13 15 15 16 17 19 19 20 21 23 23 24 25 27 28 29 33 34 36 37 38 38 39 40 40 41 41 42 42 42 43 45 45 46 47 48 49 49 49 50 50 51 51 52 52 52 53 53 53 54 54 54 54 54 54 55 55 55 55 56 56 56 56 57 57 57 57 58 58 58 58 59 59 59 59 60 60 60 60 60 61 61 61 61 61 62 62 62 62 62 63 63 63 63 63 65 69 69 70 71 72 72 73 74 76 76 77 78 80 80 81 82 84 84 85 86 88
IF                   : 66 67
INT                  : 5 35 35 36 37 39 39 40 41 44 44 46 47 48 48 50 51 52 52 53 53 53 55 56 56 57 57 58 59 59 60 62 63 64
LBRACE               : 27 34 43 64 65 66 67 67
LEQUAL               : 72 73 74
LESS                 : 83 84 85 86
LPAREN               : 4 33 52 53 54 55 56 57 58 59 60 61 62 63 66 67
MINUS                : 14 15 16 17
MULTIPLY             : 18 19 20 21
PLUS                 : 10 11 12 13
RBRACE               : 27 34 43 64 65 66 67 67
REPEAT               : 64 65
RPAREN               : 4 33 52 53 54 55 56 57 58 59 60 61 62 63 66 67
SIZE                 : 35 36 37 38 39 40 41 42
SPEED                : 35 36 37 38 39 40 41 42
STRING               : 4 7 30 31 31 32 32 33 33
TWOPOINTS            : 30 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41 41 42 42 42 44 44 44 45 45 45 46 46 46 47 47 47 48 48 48 49 49 49 50 50 50 51 51 51
TYPE                 : 27 29 34 43
WIDTH                : 44 45 46 47 48 49 50 51
error                : 

Nonterminals, with rules where they appear

ArithmeticOp         : 10 10 12 13 14 14 16 17 18 18 20 21 22 22 24 25 28 29 68 68 70 71 73 74 75 75 77 78 79 79 81 82 83 83 85 86
Assignable           : 26
Brush_body           : 34
Canvas_body          : 43
Condition            : 66 67
Instruction          : 2 3
InstructionList      : 1 2 64 65 66 67 67
Ls_rules             : 30 31
Lsystem_body         : 27
Program              : 0

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . InstructionList
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    Program                        shift and go to state 1
    InstructionList                shift and go to state 2
    Instruction                    shift and go to state 3

state 1

    (0) S' -> Program .



state 2

    (1) Program -> InstructionList .

    $end            reduce using rule 1 (Program -> InstructionList .)


state 3

    (2) InstructionList -> Instruction . END InstructionList
    (3) InstructionList -> Instruction . END

    END             shift and go to state 11


state 4

    (4) Instruction -> CHANGE_AXIOM . LPAREN ID COMMA STRING RPAREN

    LPAREN          shift and go to state 12


state 5

    (28) Instruction -> ID . EQUAL ArithmeticOp

    EQUAL           shift and go to state 13


state 6

    (27) Instruction -> TYPE . ID LBRACE Lsystem_body RBRACE
    (29) Instruction -> TYPE . ID EQUAL ArithmeticOp
    (34) Instruction -> TYPE . ID LBRACE Brush_body RBRACE
    (43) Instruction -> TYPE . ID LBRACE Canvas_body RBRACE

    ID              shift and go to state 14


state 7

    (33) Instruction -> ADD_RULE . LPAREN ID COMMA STRING ARROW STRING RPAREN

    LPAREN          shift and go to state 15


state 8

    (52) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    LPAREN          shift and go to state 16


state 9

    (64) Instruction -> REPEAT . INT LBRACE InstructionList RBRACE
    (65) Instruction -> REPEAT . ID LBRACE InstructionList RBRACE

    INT             shift and go to state 17
    ID              shift and go to state 18


state 10

    (66) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LPAREN          shift and go to state 19


state 11

    (2) InstructionList -> Instruction END . InstructionList
    (3) InstructionList -> Instruction END .
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    $end            reduce using rule 3 (InstructionList -> Instruction END .)
    RBRACE          reduce using rule 3 (InstructionList -> Instruction END .)
    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    Instruction                    shift and go to state 3
    InstructionList                shift and go to state 20

state 12

    (4) Instruction -> CHANGE_AXIOM LPAREN . ID COMMA STRING RPAREN

    ID              shift and go to state 21


state 13

    (28) Instruction -> ID EQUAL . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 22
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 23
    Assignable                     shift and go to state 24

state 14

    (27) Instruction -> TYPE ID . LBRACE Lsystem_body RBRACE
    (29) Instruction -> TYPE ID . EQUAL ArithmeticOp
    (34) Instruction -> TYPE ID . LBRACE Brush_body RBRACE
    (43) Instruction -> TYPE ID . LBRACE Canvas_body RBRACE

    LBRACE          shift and go to state 30
    EQUAL           shift and go to state 31


state 15

    (33) Instruction -> ADD_RULE LPAREN . ID COMMA STRING ARROW STRING RPAREN

    ID              shift and go to state 32


state 16

    (52) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 33


state 17

    (64) Instruction -> REPEAT INT . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 34


state 18

    (65) Instruction -> REPEAT ID . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 35


state 19

    (66) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (68) Condition -> . ArithmeticOp GEQUAL ArithmeticOp
    (69) Condition -> . ID GEQUAL ID
    (70) Condition -> . ID GEQUAL ArithmeticOp
    (71) Condition -> . ArithmeticOp GEQUAL ID
    (72) Condition -> . ID LEQUAL ID
    (73) Condition -> . ID LEQUAL ArithmeticOp
    (74) Condition -> . ArithmeticOp LEQUAL ID
    (75) Condition -> . ArithmeticOp EQUALEQUAL ArithmeticOp
    (76) Condition -> . ID EQUALEQUAL ID
    (77) Condition -> . ID EQUALEQUAL ArithmeticOp
    (78) Condition -> . ArithmeticOp EQUALEQUAL ID
    (79) Condition -> . ArithmeticOp GREATER ArithmeticOp
    (80) Condition -> . ID GREATER ID
    (81) Condition -> . ID GREATER ArithmeticOp
    (82) Condition -> . ArithmeticOp GREATER ID
    (83) Condition -> . ArithmeticOp LESS ArithmeticOp
    (84) Condition -> . ID LESS ID
    (85) Condition -> . ArithmeticOp LESS ID
    (86) Condition -> . ID LESS ArithmeticOp
    (87) Condition -> . BOOL
    (88) Condition -> . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 38
    BOOL            shift and go to state 39
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    COL             shift and go to state 29

    Condition                      shift and go to state 36
    ArithmeticOp                   shift and go to state 37
    Assignable                     shift and go to state 24

state 20

    (2) InstructionList -> Instruction END InstructionList .

    $end            reduce using rule 2 (InstructionList -> Instruction END InstructionList .)
    RBRACE          reduce using rule 2 (InstructionList -> Instruction END InstructionList .)


state 21

    (4) Instruction -> CHANGE_AXIOM LPAREN ID . COMMA STRING RPAREN

    COMMA           shift and go to state 40


state 22

    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 23

    (28) Instruction -> ID EQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 28 (Instruction -> ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 24

    (26) ArithmeticOp -> Assignable .

    PLUS            reduce using rule 26 (ArithmeticOp -> Assignable .)
    MINUS           reduce using rule 26 (ArithmeticOp -> Assignable .)
    MULTIPLY        reduce using rule 26 (ArithmeticOp -> Assignable .)
    DIFFER          reduce using rule 26 (ArithmeticOp -> Assignable .)
    END             reduce using rule 26 (ArithmeticOp -> Assignable .)
    GEQUAL          reduce using rule 26 (ArithmeticOp -> Assignable .)
    LEQUAL          reduce using rule 26 (ArithmeticOp -> Assignable .)
    EQUALEQUAL      reduce using rule 26 (ArithmeticOp -> Assignable .)
    GREATER         reduce using rule 26 (ArithmeticOp -> Assignable .)
    LESS            reduce using rule 26 (ArithmeticOp -> Assignable .)
    RPAREN          reduce using rule 26 (ArithmeticOp -> Assignable .)


state 25

    (5) Assignable -> INT .

    PLUS            reduce using rule 5 (Assignable -> INT .)
    MINUS           reduce using rule 5 (Assignable -> INT .)
    MULTIPLY        reduce using rule 5 (Assignable -> INT .)
    DIFFER          reduce using rule 5 (Assignable -> INT .)
    END             reduce using rule 5 (Assignable -> INT .)
    GEQUAL          reduce using rule 5 (Assignable -> INT .)
    LEQUAL          reduce using rule 5 (Assignable -> INT .)
    EQUALEQUAL      reduce using rule 5 (Assignable -> INT .)
    GREATER         reduce using rule 5 (Assignable -> INT .)
    LESS            reduce using rule 5 (Assignable -> INT .)
    RPAREN          reduce using rule 5 (Assignable -> INT .)


state 26

    (6) Assignable -> FLOAT .

    PLUS            reduce using rule 6 (Assignable -> FLOAT .)
    MINUS           reduce using rule 6 (Assignable -> FLOAT .)
    MULTIPLY        reduce using rule 6 (Assignable -> FLOAT .)
    DIFFER          reduce using rule 6 (Assignable -> FLOAT .)
    END             reduce using rule 6 (Assignable -> FLOAT .)
    GEQUAL          reduce using rule 6 (Assignable -> FLOAT .)
    LEQUAL          reduce using rule 6 (Assignable -> FLOAT .)
    EQUALEQUAL      reduce using rule 6 (Assignable -> FLOAT .)
    GREATER         reduce using rule 6 (Assignable -> FLOAT .)
    LESS            reduce using rule 6 (Assignable -> FLOAT .)
    RPAREN          reduce using rule 6 (Assignable -> FLOAT .)


state 27

    (7) Assignable -> STRING .

    PLUS            reduce using rule 7 (Assignable -> STRING .)
    MINUS           reduce using rule 7 (Assignable -> STRING .)
    MULTIPLY        reduce using rule 7 (Assignable -> STRING .)
    DIFFER          reduce using rule 7 (Assignable -> STRING .)
    END             reduce using rule 7 (Assignable -> STRING .)
    GEQUAL          reduce using rule 7 (Assignable -> STRING .)
    LEQUAL          reduce using rule 7 (Assignable -> STRING .)
    EQUALEQUAL      reduce using rule 7 (Assignable -> STRING .)
    GREATER         reduce using rule 7 (Assignable -> STRING .)
    LESS            reduce using rule 7 (Assignable -> STRING .)
    RPAREN          reduce using rule 7 (Assignable -> STRING .)


state 28

    (8) Assignable -> BOOL .

    PLUS            reduce using rule 8 (Assignable -> BOOL .)
    MINUS           reduce using rule 8 (Assignable -> BOOL .)
    MULTIPLY        reduce using rule 8 (Assignable -> BOOL .)
    DIFFER          reduce using rule 8 (Assignable -> BOOL .)
    END             reduce using rule 8 (Assignable -> BOOL .)
    GEQUAL          reduce using rule 8 (Assignable -> BOOL .)
    LEQUAL          reduce using rule 8 (Assignable -> BOOL .)
    EQUALEQUAL      reduce using rule 8 (Assignable -> BOOL .)
    GREATER         reduce using rule 8 (Assignable -> BOOL .)
    LESS            reduce using rule 8 (Assignable -> BOOL .)
    RPAREN          reduce using rule 8 (Assignable -> BOOL .)


state 29

    (9) Assignable -> COL .

    PLUS            reduce using rule 9 (Assignable -> COL .)
    MINUS           reduce using rule 9 (Assignable -> COL .)
    MULTIPLY        reduce using rule 9 (Assignable -> COL .)
    DIFFER          reduce using rule 9 (Assignable -> COL .)
    END             reduce using rule 9 (Assignable -> COL .)
    GEQUAL          reduce using rule 9 (Assignable -> COL .)
    LEQUAL          reduce using rule 9 (Assignable -> COL .)
    EQUALEQUAL      reduce using rule 9 (Assignable -> COL .)
    GREATER         reduce using rule 9 (Assignable -> COL .)
    LESS            reduce using rule 9 (Assignable -> COL .)
    RPAREN          reduce using rule 9 (Assignable -> COL .)


state 30

    (27) Instruction -> TYPE ID LBRACE . Lsystem_body RBRACE
    (34) Instruction -> TYPE ID LBRACE . Brush_body RBRACE
    (43) Instruction -> TYPE ID LBRACE . Canvas_body RBRACE
    (30) Lsystem_body -> . AXIOM TWOPOINTS STRING COMMA Ls_rules
    (35) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (37) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
    (44) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (45) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (49) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    AXIOM           shift and go to state 52
    SIZE            shift and go to state 53
    HIGH            shift and go to state 54

    Lsystem_body                   shift and go to state 49
    Brush_body                     shift and go to state 50
    Canvas_body                    shift and go to state 51

state 31

    (29) Instruction -> TYPE ID EQUAL . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 22
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 55
    Assignable                     shift and go to state 24

state 32

    (33) Instruction -> ADD_RULE LPAREN ID . COMMA STRING ARROW STRING RPAREN

    COMMA           shift and go to state 56


state 33

    (52) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 57


state 34

    (64) Instruction -> REPEAT INT LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 58
    Instruction                    shift and go to state 3

state 35

    (65) Instruction -> REPEAT ID LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 59
    Instruction                    shift and go to state 3

state 36

    (66) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    RPAREN          shift and go to state 60


state 37

    (68) Condition -> ArithmeticOp . GEQUAL ArithmeticOp
    (71) Condition -> ArithmeticOp . GEQUAL ID
    (74) Condition -> ArithmeticOp . LEQUAL ID
    (75) Condition -> ArithmeticOp . EQUALEQUAL ArithmeticOp
    (78) Condition -> ArithmeticOp . EQUALEQUAL ID
    (79) Condition -> ArithmeticOp . GREATER ArithmeticOp
    (82) Condition -> ArithmeticOp . GREATER ID
    (83) Condition -> ArithmeticOp . LESS ArithmeticOp
    (85) Condition -> ArithmeticOp . LESS ID
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    GEQUAL          shift and go to state 61
    LEQUAL          shift and go to state 62
    EQUALEQUAL      shift and go to state 63
    GREATER         shift and go to state 64
    LESS            shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 38

    (69) Condition -> ID . GEQUAL ID
    (70) Condition -> ID . GEQUAL ArithmeticOp
    (72) Condition -> ID . LEQUAL ID
    (73) Condition -> ID . LEQUAL ArithmeticOp
    (76) Condition -> ID . EQUALEQUAL ID
    (77) Condition -> ID . EQUALEQUAL ArithmeticOp
    (80) Condition -> ID . GREATER ID
    (81) Condition -> ID . GREATER ArithmeticOp
    (84) Condition -> ID . LESS ID
    (86) Condition -> ID . LESS ArithmeticOp
    (88) Condition -> ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    GEQUAL          shift and go to state 66
    LEQUAL          shift and go to state 67
    EQUALEQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    LESS            shift and go to state 70
    RPAREN          reduce using rule 88 (Condition -> ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 39

    (87) Condition -> BOOL .
    (8) Assignable -> BOOL .

    RPAREN          reduce using rule 87 (Condition -> BOOL .)
    GEQUAL          reduce using rule 8 (Assignable -> BOOL .)
    LEQUAL          reduce using rule 8 (Assignable -> BOOL .)
    EQUALEQUAL      reduce using rule 8 (Assignable -> BOOL .)
    GREATER         reduce using rule 8 (Assignable -> BOOL .)
    LESS            reduce using rule 8 (Assignable -> BOOL .)
    PLUS            reduce using rule 8 (Assignable -> BOOL .)
    MINUS           reduce using rule 8 (Assignable -> BOOL .)
    MULTIPLY        reduce using rule 8 (Assignable -> BOOL .)
    DIFFER          reduce using rule 8 (Assignable -> BOOL .)


state 40

    (4) Instruction -> CHANGE_AXIOM LPAREN ID COMMA . STRING RPAREN

    STRING          shift and go to state 71


state 41

    (11) ArithmeticOp -> ID PLUS . ID
    (12) ArithmeticOp -> ID PLUS . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 72
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 73
    Assignable                     shift and go to state 24

state 42

    (15) ArithmeticOp -> ID MINUS . ID
    (16) ArithmeticOp -> ID MINUS . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 74
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 75
    Assignable                     shift and go to state 24

state 43

    (19) ArithmeticOp -> ID MULTIPLY . ID
    (20) ArithmeticOp -> ID MULTIPLY . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 76
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 77
    Assignable                     shift and go to state 24

state 44

    (23) ArithmeticOp -> ID DIFFER . ID
    (25) ArithmeticOp -> ID DIFFER . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 78
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 79
    Assignable                     shift and go to state 24

state 45

    (10) ArithmeticOp -> ArithmeticOp PLUS . ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp PLUS . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 81
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 80
    Assignable                     shift and go to state 24

state 46

    (14) ArithmeticOp -> ArithmeticOp MINUS . ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp MINUS . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 83
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 82
    Assignable                     shift and go to state 24

state 47

    (18) ArithmeticOp -> ArithmeticOp MULTIPLY . ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp MULTIPLY . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 85
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 84
    Assignable                     shift and go to state 24

state 48

    (22) ArithmeticOp -> ArithmeticOp DIFFER . ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp DIFFER . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 87
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 86
    Assignable                     shift and go to state 24

state 49

    (27) Instruction -> TYPE ID LBRACE Lsystem_body . RBRACE

    RBRACE          shift and go to state 88


state 50

    (34) Instruction -> TYPE ID LBRACE Brush_body . RBRACE

    RBRACE          shift and go to state 89


state 51

    (43) Instruction -> TYPE ID LBRACE Canvas_body . RBRACE

    RBRACE          shift and go to state 90


state 52

    (30) Lsystem_body -> AXIOM . TWOPOINTS STRING COMMA Ls_rules

    TWOPOINTS       shift and go to state 91


state 53

    (35) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (37) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 92


state 54

    (44) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (45) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (49) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    TWOPOINTS       shift and go to state 93


state 55

    (29) Instruction -> TYPE ID EQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 29 (Instruction -> TYPE ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 56

    (33) Instruction -> ADD_RULE LPAREN ID COMMA . STRING ARROW STRING RPAREN

    STRING          shift and go to state 94


state 57

    (52) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 95


state 58

    (64) Instruction -> REPEAT INT LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 96


state 59

    (65) Instruction -> REPEAT ID LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 97


state 60

    (66) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE
    (67) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 98


state 61

    (68) Condition -> ArithmeticOp GEQUAL . ArithmeticOp
    (71) Condition -> ArithmeticOp GEQUAL . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 100
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 99
    Assignable                     shift and go to state 24

state 62

    (74) Condition -> ArithmeticOp LEQUAL . ID

    ID              shift and go to state 101


state 63

    (75) Condition -> ArithmeticOp EQUALEQUAL . ArithmeticOp
    (78) Condition -> ArithmeticOp EQUALEQUAL . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 103
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 102
    Assignable                     shift and go to state 24

state 64

    (79) Condition -> ArithmeticOp GREATER . ArithmeticOp
    (82) Condition -> ArithmeticOp GREATER . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 105
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 104
    Assignable                     shift and go to state 24

state 65

    (83) Condition -> ArithmeticOp LESS . ArithmeticOp
    (85) Condition -> ArithmeticOp LESS . ID
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 107
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 106
    Assignable                     shift and go to state 24

state 66

    (69) Condition -> ID GEQUAL . ID
    (70) Condition -> ID GEQUAL . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 108
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 109
    Assignable                     shift and go to state 24

state 67

    (72) Condition -> ID LEQUAL . ID
    (73) Condition -> ID LEQUAL . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 110
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 111
    Assignable                     shift and go to state 24

state 68

    (76) Condition -> ID EQUALEQUAL . ID
    (77) Condition -> ID EQUALEQUAL . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 112
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 113
    Assignable                     shift and go to state 24

state 69

    (80) Condition -> ID GREATER . ID
    (81) Condition -> ID GREATER . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 114
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 115
    Assignable                     shift and go to state 24

state 70

    (84) Condition -> ID LESS . ID
    (86) Condition -> ID LESS . ArithmeticOp
    (10) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (11) ArithmeticOp -> . ID PLUS ID
    (12) ArithmeticOp -> . ID PLUS ArithmeticOp
    (13) ArithmeticOp -> . ArithmeticOp PLUS ID
    (14) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (15) ArithmeticOp -> . ID MINUS ID
    (16) ArithmeticOp -> . ID MINUS ArithmeticOp
    (17) ArithmeticOp -> . ArithmeticOp MINUS ID
    (18) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ID MULTIPLY ID
    (20) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (23) ArithmeticOp -> . ID DIFFER ID
    (24) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (25) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (26) ArithmeticOp -> . Assignable
    (5) Assignable -> . INT
    (6) Assignable -> . FLOAT
    (7) Assignable -> . STRING
    (8) Assignable -> . BOOL
    (9) Assignable -> . COL

    ID              shift and go to state 116
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    STRING          shift and go to state 27
    BOOL            shift and go to state 28
    COL             shift and go to state 29

    ArithmeticOp                   shift and go to state 117
    Assignable                     shift and go to state 24

state 71

    (4) Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING . RPAREN

    RPAREN          shift and go to state 118


state 72

    (11) ArithmeticOp -> ID PLUS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    GEQUAL          reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    LEQUAL          reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    EQUALEQUAL      reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    GREATER         reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    LESS            reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    RPAREN          reduce using rule 11 (ArithmeticOp -> ID PLUS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 11 (ArithmeticOp -> ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 11 (ArithmeticOp -> ID PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 11 (ArithmeticOp -> ID PLUS ID .) ]
  ! DIFFER          [ reduce using rule 11 (ArithmeticOp -> ID PLUS ID .) ]


state 73

    (12) ArithmeticOp -> ID PLUS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    MINUS           reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    END             reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GREATER         reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LESS            reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    RPAREN          reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48

  ! MULTIPLY        [ reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 12 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 74

    (15) ArithmeticOp -> ID MINUS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    GEQUAL          reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    LEQUAL          reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    EQUALEQUAL      reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    GREATER         reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    LESS            reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    RPAREN          reduce using rule 15 (ArithmeticOp -> ID MINUS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 15 (ArithmeticOp -> ID MINUS ID .) ]
  ! MINUS           [ reduce using rule 15 (ArithmeticOp -> ID MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 15 (ArithmeticOp -> ID MINUS ID .) ]
  ! DIFFER          [ reduce using rule 15 (ArithmeticOp -> ID MINUS ID .) ]


state 75

    (16) ArithmeticOp -> ID MINUS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    MINUS           reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    END             reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GREATER         reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LESS            reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    RPAREN          reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48

  ! MULTIPLY        [ reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 16 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 76

    (19) ArithmeticOp -> ID MULTIPLY ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    GEQUAL          reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    LEQUAL          reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    GREATER         reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    LESS            reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    RPAREN          reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 19 (ArithmeticOp -> ID MULTIPLY ID .) ]


state 77

    (20) ArithmeticOp -> ID MULTIPLY ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    MINUS           reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    MULTIPLY        reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    DIFFER          reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    END             reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 20 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULTIPLY        [ shift and go to state 47 ]
  ! DIFFER          [ shift and go to state 48 ]


state 78

    (23) ArithmeticOp -> ID DIFFER ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    GEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    LEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    EQUALEQUAL      reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    GREATER         reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    LESS            reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    RPAREN          reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MINUS           [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ID .) ]


state 79

    (25) ArithmeticOp -> ID DIFFER ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    MINUS           reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    MULTIPLY        reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    DIFFER          reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    END             reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GREATER         reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LESS            reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 25 (ArithmeticOp -> ID DIFFER ArithmeticOp .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULTIPLY        [ shift and go to state 47 ]
  ! DIFFER          [ shift and go to state 48 ]


state 80

    (10) ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    MINUS           reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    END             reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GREATER         reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LESS            reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    RPAREN          reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48

  ! MULTIPLY        [ reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 10 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 81

    (13) ArithmeticOp -> ArithmeticOp PLUS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GEQUAL          reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LEQUAL          reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    EQUALEQUAL      reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GREATER         reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LESS            reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    RPAREN          reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MINUS           [ reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! DIFFER          [ reduce using rule 13 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]


state 82

    (14) ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    MINUS           reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    END             reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GREATER         reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LESS            reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    RPAREN          reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48

  ! MULTIPLY        [ reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 14 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]


state 83

    (17) ArithmeticOp -> ArithmeticOp MINUS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GEQUAL          reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LEQUAL          reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    EQUALEQUAL      reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GREATER         reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LESS            reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    RPAREN          reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MINUS           [ reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! DIFFER          [ reduce using rule 17 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]


state 84

    (18) ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    MINUS           reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    MULTIPLY        reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    DIFFER          reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    END             reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 18 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULTIPLY        [ shift and go to state 47 ]
  ! DIFFER          [ shift and go to state 48 ]


state 85

    (21) ArithmeticOp -> ArithmeticOp MULTIPLY ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GEQUAL          reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LEQUAL          reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GREATER         reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LESS            reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    RPAREN          reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 21 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]


state 86

    (22) ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    PLUS            reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    MINUS           reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    MULTIPLY        reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    DIFFER          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    END             reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GREATER         reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LESS            reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULTIPLY        [ shift and go to state 47 ]
  ! DIFFER          [ shift and go to state 48 ]


state 87

    (24) ArithmeticOp -> ArithmeticOp DIFFER ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GEQUAL          reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LEQUAL          reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    EQUALEQUAL      reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GREATER         reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LESS            reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    RPAREN          reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44

  ! PLUS            [ reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MINUS           [ reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 24 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]


state 88

    (27) Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .

    END             reduce using rule 27 (Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .)


state 89

    (34) Instruction -> TYPE ID LBRACE Brush_body RBRACE .

    END             reduce using rule 34 (Instruction -> TYPE ID LBRACE Brush_body RBRACE .)


state 90

    (43) Instruction -> TYPE ID LBRACE Canvas_body RBRACE .

    END             reduce using rule 43 (Instruction -> TYPE ID LBRACE Canvas_body RBRACE .)


state 91

    (30) Lsystem_body -> AXIOM TWOPOINTS . STRING COMMA Ls_rules

    STRING          shift and go to state 119


state 92

    (35) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (37) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    INT             shift and go to state 120
    ID              shift and go to state 121


state 93

    (44) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (45) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (49) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    INT             shift and go to state 122
    ID              shift and go to state 123


state 94

    (33) Instruction -> ADD_RULE LPAREN ID COMMA STRING . ARROW STRING RPAREN

    ARROW           shift and go to state 124


state 95

    (52) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 125


state 96

    (64) Instruction -> REPEAT INT LBRACE InstructionList RBRACE .

    END             reduce using rule 64 (Instruction -> REPEAT INT LBRACE InstructionList RBRACE .)


state 97

    (65) Instruction -> REPEAT ID LBRACE InstructionList RBRACE .

    END             reduce using rule 65 (Instruction -> REPEAT ID LBRACE InstructionList RBRACE .)


state 98

    (66) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE
    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 126
    Instruction                    shift and go to state 3

state 99

    (68) Condition -> ArithmeticOp GEQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 68 (Condition -> ArithmeticOp GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 100

    (71) Condition -> ArithmeticOp GEQUAL ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 71 (Condition -> ArithmeticOp GEQUAL ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 101

    (74) Condition -> ArithmeticOp LEQUAL ID .

    RPAREN          reduce using rule 74 (Condition -> ArithmeticOp LEQUAL ID .)


state 102

    (75) Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 75 (Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 103

    (78) Condition -> ArithmeticOp EQUALEQUAL ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 78 (Condition -> ArithmeticOp EQUALEQUAL ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 104

    (79) Condition -> ArithmeticOp GREATER ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 79 (Condition -> ArithmeticOp GREATER ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 105

    (82) Condition -> ArithmeticOp GREATER ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 82 (Condition -> ArithmeticOp GREATER ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 106

    (83) Condition -> ArithmeticOp LESS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 83 (Condition -> ArithmeticOp LESS ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 107

    (85) Condition -> ArithmeticOp LESS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 85 (Condition -> ArithmeticOp LESS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 108

    (69) Condition -> ID GEQUAL ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 69 (Condition -> ID GEQUAL ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 109

    (70) Condition -> ID GEQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 70 (Condition -> ID GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 110

    (72) Condition -> ID LEQUAL ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 72 (Condition -> ID LEQUAL ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 111

    (73) Condition -> ID LEQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 73 (Condition -> ID LEQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 112

    (76) Condition -> ID EQUALEQUAL ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 76 (Condition -> ID EQUALEQUAL ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 113

    (77) Condition -> ID EQUALEQUAL ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 77 (Condition -> ID EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 114

    (80) Condition -> ID GREATER ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 80 (Condition -> ID GREATER ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 115

    (81) Condition -> ID GREATER ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 81 (Condition -> ID GREATER ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 116

    (84) Condition -> ID LESS ID .
    (11) ArithmeticOp -> ID . PLUS ID
    (12) ArithmeticOp -> ID . PLUS ArithmeticOp
    (15) ArithmeticOp -> ID . MINUS ID
    (16) ArithmeticOp -> ID . MINUS ArithmeticOp
    (19) ArithmeticOp -> ID . MULTIPLY ID
    (20) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (23) ArithmeticOp -> ID . DIFFER ID
    (25) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 84 (Condition -> ID LESS ID .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    MULTIPLY        shift and go to state 43
    DIFFER          shift and go to state 44


state 117

    (86) Condition -> ID LESS ArithmeticOp .
    (10) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (13) ArithmeticOp -> ArithmeticOp . PLUS ID
    (14) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (17) ArithmeticOp -> ArithmeticOp . MINUS ID
    (18) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (24) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 86 (Condition -> ID LESS ArithmeticOp .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    MULTIPLY        shift and go to state 47
    DIFFER          shift and go to state 48


state 118

    (4) Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN .

    END             reduce using rule 4 (Instruction -> CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN .)


state 119

    (30) Lsystem_body -> AXIOM TWOPOINTS STRING . COMMA Ls_rules

    COMMA           shift and go to state 127


state 120

    (35) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 128


state 121

    (37) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 129


state 122

    (44) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 130


state 123

    (45) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 131


state 124

    (33) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW . STRING RPAREN

    STRING          shift and go to state 132


state 125

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 133


state 126

    (66) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE
    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE ELSE LBRACE InstructionList RBRACE

    RBRACE          shift and go to state 134


state 127

    (30) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA . Ls_rules
    (31) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (32) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 135

    Ls_rules                       shift and go to state 136

state 128

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 137


state 129

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 138


state 130

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID

    WIDTH           shift and go to state 139


state 131

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    WIDTH           shift and go to state 140


state 132

    (33) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING . RPAREN

    RPAREN          shift and go to state 141


state 133

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 142


state 134

    (66) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .
    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE . ELSE LBRACE InstructionList RBRACE

    END             reduce using rule 66 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .)
    ELSE            shift and go to state 143


state 135

    (31) Ls_rules -> STRING . ARROW STRING COMMA Ls_rules
    (32) Ls_rules -> STRING . ARROW STRING

    ARROW           shift and go to state 144


state 136

    (30) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .

    RBRACE          reduce using rule 30 (Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .)


state 137

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 145


state 138

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS ID COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 146


state 139

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS ID

    TWOPOINTS       shift and go to state 147


state 140

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS ID

    TWOPOINTS       shift and go to state 148


state 141

    (33) Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN .

    END             reduce using rule 33 (Instruction -> ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN .)


state 142

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA ID RPAREN

    INT             shift and go to state 150
    ID              shift and go to state 149


state 143

    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 151


state 144

    (31) Ls_rules -> STRING ARROW . STRING COMMA Ls_rules
    (32) Ls_rules -> STRING ARROW . STRING

    STRING          shift and go to state 152


state 145

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID
    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . ID COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . ID COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 153
    ID              shift and go to state 154


state 146

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID
    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . ID COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . ID COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 156
    ID              shift and go to state 155


state 147

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL
    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS ID
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS ID

    INT             shift and go to state 157
    ID              shift and go to state 158


state 148

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL
    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS ID
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS ID

    ID              shift and go to state 159
    INT             shift and go to state 160


state 149

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA INT RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA ID RPAREN

    COMMA           shift and go to state 161


state 150

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 162


state 151

    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (4) Instruction -> . CHANGE_AXIOM LPAREN ID COMMA STRING RPAREN
    (27) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (28) Instruction -> . ID EQUAL ArithmeticOp
    (29) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (33) Instruction -> . ADD_RULE LPAREN ID COMMA STRING ARROW STRING RPAREN
    (34) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (43) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (54) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (55) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (56) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (57) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (58) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (59) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (60) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (61) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (62) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (63) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (64) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (65) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (66) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (67) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    CHANGE_AXIOM    shift and go to state 4
    TYPE            shift and go to state 6
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 7
    DRAW            shift and go to state 8
    REPEAT          shift and go to state 9
    IF              shift and go to state 10

    InstructionList                shift and go to state 163
    Instruction                    shift and go to state 3

state 152

    (31) Ls_rules -> STRING ARROW STRING . COMMA Ls_rules
    (32) Ls_rules -> STRING ARROW STRING .

    COMMA           shift and go to state 164
    RBRACE          reduce using rule 32 (Ls_rules -> STRING ARROW STRING .)


state 153

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 165


state 154

    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID . COMMA SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 166


state 155

    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID . COMMA SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 167


state 156

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 168


state 157

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 169


state 158

    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 170


state 159

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 171


state 160

    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS ID

    COMMA           shift and go to state 172


state 161

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN
    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA INT RPAREN
    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA INT RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA ID RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA ID RPAREN

    ID              shift and go to state 173
    FLOAT           shift and go to state 174
    INT             shift and go to state 175


state 162

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA INT RPAREN
    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA ID RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA ID RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA ID RPAREN

    FLOAT           shift and go to state 178
    INT             shift and go to state 177
    ID              shift and go to state 176


state 163

    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 179


state 164

    (31) Ls_rules -> STRING ARROW STRING COMMA . Ls_rules
    (31) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (32) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 135

    Ls_rules                       shift and go to state 180

state 165

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 181


state 166

    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA . SPEED TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 182


state 167

    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA . SPEED TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 183


state 168

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 184


state 169

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS ID

    COLOR           shift and go to state 185


state 170

    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS ID

    COLOR           shift and go to state 186


state 171

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS ID

    COLOR           shift and go to state 187


state 172

    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS ID

    COLOR           shift and go to state 188


state 173

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA INT RPAREN

    COMMA           shift and go to state 189


state 174

    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 190


state 175

    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA INT RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 191


state 176

    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA INT RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA ID RPAREN

    COMMA           shift and go to state 192


state 177

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA INT RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 193


state 178

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 194


state 179

    (67) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .

    END             reduce using rule 67 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .)


state 180

    (31) Ls_rules -> STRING ARROW STRING COMMA Ls_rules .

    RBRACE          reduce using rule 31 (Ls_rules -> STRING ARROW STRING COMMA Ls_rules .)


state 181

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 195


state 182

    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED . TWOPOINTS INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 196


state 183

    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED . TWOPOINTS INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 197


state 184

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 198


state 185

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS ID

    TWOPOINTS       shift and go to state 199


state 186

    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS ID

    TWOPOINTS       shift and go to state 200


state 187

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS ID

    TWOPOINTS       shift and go to state 201


state 188

    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS ID

    TWOPOINTS       shift and go to state 202


state 189

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN
    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . INT RPAREN

    ID              shift and go to state 203
    INT             shift and go to state 204


state 190

    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . INT RPAREN
    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 206
    ID              shift and go to state 205


state 191

    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . INT RPAREN
    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 208
    ID              shift and go to state 207


state 192

    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . INT RPAREN
    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . ID RPAREN

    INT             shift and go to state 210
    ID              shift and go to state 209


state 193

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . INT RPAREN
    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 212
    ID              shift and go to state 211


state 194

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . INT RPAREN
    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 214
    ID              shift and go to state 213


state 195

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 215
    ID              shift and go to state 216


state 196

    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS . INT
    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 217
    ID              shift and go to state 218


state 197

    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS . INT
    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 220
    ID              shift and go to state 219


state 198

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 222
    ID              shift and go to state 221


state 199

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL
    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . ID

    COL             shift and go to state 223
    ID              shift and go to state 224


state 200

    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL
    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . ID

    COL             shift and go to state 226
    ID              shift and go to state 225


state 201

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL
    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . ID

    COL             shift and go to state 228
    ID              shift and go to state 227


state 202

    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL
    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . ID

    COL             shift and go to state 230
    ID              shift and go to state 229


state 203

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 231


state 204

    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 232


state 205

    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 233


state 206

    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 234


state 207

    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 235


state 208

    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 236


state 209

    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 237


state 210

    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 238


state 211

    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 239


state 212

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 240


state 213

    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 241


state 214

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 242


state 215

    (35) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 35 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 216

    (36) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 36 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 217

    (39) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 39 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT .)


state 218

    (40) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 40 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID .)


state 219

    (42) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 42 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS ID .)


state 220

    (41) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 41 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS ID COMMA SPEED TWOPOINTS INT .)


state 221

    (38) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 38 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 222

    (37) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 37 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 223

    (44) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 44 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 224

    (48) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID .

    RBRACE          reduce using rule 48 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID .)


state 225

    (50) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID .

    RBRACE          reduce using rule 50 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID .)


state 226

    (46) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 46 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 227

    (49) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID .

    RBRACE          reduce using rule 49 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS ID .)


state 228

    (45) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 45 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 229

    (51) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID .

    RBRACE          reduce using rule 51 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS ID .)


state 230

    (47) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 47 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 231

    (54) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .

    END             reduce using rule 54 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .)


state 232

    (60) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .

    END             reduce using rule 60 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .)


state 233

    (61) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 61 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .)


state 234

    (55) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 55 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .)


state 235

    (62) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .

    END             reduce using rule 62 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .)


state 236

    (56) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .

    END             reduce using rule 56 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .)


state 237

    (63) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .

    END             reduce using rule 63 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .)


state 238

    (57) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .

    END             reduce using rule 57 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .)


state 239

    (59) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .

    END             reduce using rule 59 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .)


state 240

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .

    END             reduce using rule 53 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .)


state 241

    (58) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 58 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .)


state 242

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 52 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 72 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 74 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 76 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 85 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 87 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 87 resolved as shift
