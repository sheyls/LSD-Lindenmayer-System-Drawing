Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LCOR
    RCOR

Grammar

Rule 0     S' -> Program
Rule 1     Program -> InstructionList
Rule 2     InstructionList -> Instruction END InstructionList
Rule 3     InstructionList -> Instruction END
Rule 4     Assignable -> INT
Rule 5     Assignable -> FLOAT
Rule 6     Assignable -> STRING
Rule 7     Assignable -> COL
Rule 8     ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp
Rule 9     ArithmeticOp -> ID PLUS ID
Rule 10    ArithmeticOp -> ID PLUS ArithmeticOp
Rule 11    ArithmeticOp -> ArithmeticOp PLUS ID
Rule 12    ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp
Rule 13    ArithmeticOp -> ID MINUS ID
Rule 14    ArithmeticOp -> ID MINUS ArithmeticOp
Rule 15    ArithmeticOp -> ArithmeticOp MINUS ID
Rule 16    ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp
Rule 17    ArithmeticOp -> ID MULTIPLY ID
Rule 18    ArithmeticOp -> ID MULTIPLY ArithmeticOp
Rule 19    ArithmeticOp -> ArithmeticOp MULTIPLY ID
Rule 20    ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp
Rule 21    ArithmeticOp -> ID DIFFER ID
Rule 22    ArithmeticOp -> ArithmeticOp DIFFER ID
Rule 23    ArithmeticOp -> ID DIFFER ArithmeticOp
Rule 24    ArithmeticOp -> Assignable
Rule 25    Instruction -> TYPE ID LBRACE Lsystem_body RBRACE
Rule 26    Instruction -> ID EQUAL ArithmeticOp
Rule 27    Instruction -> TYPE ID EQUAL ArithmeticOp
Rule 28    Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules
Rule 29    Ls_rules -> STRING ARROW STRING COMMA Ls_rules
Rule 30    Ls_rules -> STRING ARROW STRING
Rule 31    Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
Rule 32    Instruction -> TYPE ID LBRACE Brush_body RBRACE
Rule 33    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 34    Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 35    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
Rule 36    Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
Rule 37    Instruction -> TYPE ID LBRACE Canvas_body RBRACE
Rule 38    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 39    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 40    Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
Rule 41    Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
Rule 42    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
Rule 43    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
Rule 44    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
Rule 45    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
Rule 46    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
Rule 47    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
Rule 48    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
Rule 49    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
Rule 50    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
Rule 51    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
Rule 52    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
Rule 53    Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
Rule 54    Instruction -> REPEAT INT LBRACE InstructionList RBRACE
Rule 55    Instruction -> REPEAT ID LBRACE InstructionList RBRACE
Rule 56    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
Rule 57    Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
Rule 58    Condition -> ArithmeticOp GEQUAL ArithmeticOp
Rule 59    Condition -> ID GEQUAL ID
Rule 60    Condition -> ID GEQUAL ArithmeticOp
Rule 61    Condition -> ArithmeticOp GEQUAL ID
Rule 62    Condition -> ID LEQUAL ID
Rule 63    Condition -> ID LEQUAL ArithmeticOp
Rule 64    Condition -> ArithmeticOp LEQUAL ID
Rule 65    Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp
Rule 66    Condition -> ID EQUALEQUAL ID
Rule 67    Condition -> ID EQUALEQUAL ArithmeticOp
Rule 68    Condition -> ArithmeticOp EQUALEQUAL ID
Rule 69    Condition -> ArithmeticOp GREATER ArithmeticOp
Rule 70    Condition -> ID GREATER ID
Rule 71    Condition -> ID GREATER ArithmeticOp
Rule 72    Condition -> ArithmeticOp GREATER ID
Rule 73    Condition -> ArithmeticOp LESS ArithmeticOp
Rule 74    Condition -> ID LESS ID
Rule 75    Condition -> ArithmeticOp LESS ID
Rule 76    Condition -> ID LESS ArithmeticOp
Rule 77    Condition -> BOOL

Terminals, with rules where they appear

ADD_RULE             : 31
ARROW                : 29 30
AXIOM                : 28
BOOL                 : 77
COL                  : 7 33 34 35 36 38 39 40 41
COLOR                : 33 34 35 36 38 39 40 41
COMMA                : 28 29 31 31 33 33 34 34 35 35 36 36 38 38 39 39 40 40 41 41 42 42 42 42 42 43 43 43 43 43 44 44 44 44 44 45 45 45 45 45 46 46 46 46 46 47 47 47 47 47 48 48 48 48 48 49 49 49 49 49 50 50 50 50 50 51 51 51 51 51 52 52 52 52 52 53 53 53 53 53
DIFFER               : 20 21 22 23
DRAW                 : 42 43 44 45 46 47 48 49 50 51 52 53
ELSE                 : 57
END                  : 2 3
EQUAL                : 26 27
EQUALEQUAL           : 65 66 67 68
FLOAT                : 5 42 45 48 51
GEQUAL               : 58 59 60 61
GREATER              : 69 70 71 72
HIGH                 : 38 39 40 41
ID                   : 9 9 10 11 13 13 14 15 17 17 18 19 21 21 22 23 25 26 27 31 32 34 35 36 36 37 39 39 40 41 42 42 42 43 43 43 44 44 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 50 51 51 51 51 51 52 52 52 52 52 53 53 53 53 53 55 59 59 60 61 62 62 63 64 66 66 67 68 70 70 71 72 74 74 75 76
IF                   : 56 57
INT                  : 4 33 33 34 35 38 38 40 41 42 42 43 43 43 45 46 46 47 47 48 49 49 50 52 53 54
LBRACE               : 25 32 37 54 55 56 57 57
LCOR                 : 
LEQUAL               : 62 63 64
LESS                 : 73 74 75 76
LPAREN               : 31 42 43 44 45 46 47 48 49 50 51 52 53 56 57
MINUS                : 12 13 14 15
MULTIPLY             : 16 17 18 19
PLUS                 : 8 9 10 11
RBRACE               : 25 32 37 54 55 56 57 57
RCOR                 : 
REPEAT               : 54 55
RPAREN               : 31 42 43 44 45 46 47 48 49 50 51 52 53 56 57
SIZE                 : 33 34 35 36
SPEED                : 33 34 35 36
STRING               : 6 28 29 29 30 30 31 31
TWOPOINTS            : 28 33 33 33 34 34 34 35 35 35 36 36 36 38 38 38 39 39 39 40 40 40 41 41 41
TYPE                 : 25 27 32 37
WIDTH                : 38 39 40 41
error                : 

Nonterminals, with rules where they appear

ArithmeticOp         : 8 8 10 11 12 12 14 15 16 16 18 19 20 20 22 23 26 27 58 58 60 61 63 64 65 65 67 68 69 69 71 72 73 73 75 76
Assignable           : 24
Brush_body           : 32
Canvas_body          : 37
Condition            : 56 57
Instruction          : 2 3
InstructionList      : 1 2 54 55 56 57 57
Ls_rules             : 28 29
Lsystem_body         : 25
Program              : 0

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . InstructionList
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    Program                        shift and go to state 1
    InstructionList                shift and go to state 2
    Instruction                    shift and go to state 3

state 1

    (0) S' -> Program .



state 2

    (1) Program -> InstructionList .

    $end            reduce using rule 1 (Program -> InstructionList .)


state 3

    (2) InstructionList -> Instruction . END InstructionList
    (3) InstructionList -> Instruction . END

    END             shift and go to state 10


state 4

    (25) Instruction -> TYPE . ID LBRACE Lsystem_body RBRACE
    (27) Instruction -> TYPE . ID EQUAL ArithmeticOp
    (32) Instruction -> TYPE . ID LBRACE Brush_body RBRACE
    (37) Instruction -> TYPE . ID LBRACE Canvas_body RBRACE

    ID              shift and go to state 11


state 5

    (26) Instruction -> ID . EQUAL ArithmeticOp

    EQUAL           shift and go to state 12


state 6

    (31) Instruction -> ADD_RULE . LPAREN ID COMMA STRING COMMA STRING RPAREN

    LPAREN          shift and go to state 13


state 7

    (42) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW . LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    LPAREN          shift and go to state 14


state 8

    (54) Instruction -> REPEAT . INT LBRACE InstructionList RBRACE
    (55) Instruction -> REPEAT . ID LBRACE InstructionList RBRACE

    INT             shift and go to state 15
    ID              shift and go to state 16


state 9

    (56) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> IF . LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LPAREN          shift and go to state 17


state 10

    (2) InstructionList -> Instruction END . InstructionList
    (3) InstructionList -> Instruction END .
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    $end            reduce using rule 3 (InstructionList -> Instruction END .)
    RBRACE          reduce using rule 3 (InstructionList -> Instruction END .)
    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    Instruction                    shift and go to state 3
    InstructionList                shift and go to state 18

state 11

    (25) Instruction -> TYPE ID . LBRACE Lsystem_body RBRACE
    (27) Instruction -> TYPE ID . EQUAL ArithmeticOp
    (32) Instruction -> TYPE ID . LBRACE Brush_body RBRACE
    (37) Instruction -> TYPE ID . LBRACE Canvas_body RBRACE

    LBRACE          shift and go to state 19
    EQUAL           shift and go to state 20


state 12

    (26) Instruction -> ID EQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 21
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 22
    Assignable                     shift and go to state 23

state 13

    (31) Instruction -> ADD_RULE LPAREN . ID COMMA STRING COMMA STRING RPAREN

    ID              shift and go to state 28


state 14

    (42) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN . ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 29


state 15

    (54) Instruction -> REPEAT INT . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 30


state 16

    (55) Instruction -> REPEAT ID . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 31


state 17

    (56) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> IF LPAREN . Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (58) Condition -> . ArithmeticOp GEQUAL ArithmeticOp
    (59) Condition -> . ID GEQUAL ID
    (60) Condition -> . ID GEQUAL ArithmeticOp
    (61) Condition -> . ArithmeticOp GEQUAL ID
    (62) Condition -> . ID LEQUAL ID
    (63) Condition -> . ID LEQUAL ArithmeticOp
    (64) Condition -> . ArithmeticOp LEQUAL ID
    (65) Condition -> . ArithmeticOp EQUALEQUAL ArithmeticOp
    (66) Condition -> . ID EQUALEQUAL ID
    (67) Condition -> . ID EQUALEQUAL ArithmeticOp
    (68) Condition -> . ArithmeticOp EQUALEQUAL ID
    (69) Condition -> . ArithmeticOp GREATER ArithmeticOp
    (70) Condition -> . ID GREATER ID
    (71) Condition -> . ID GREATER ArithmeticOp
    (72) Condition -> . ArithmeticOp GREATER ID
    (73) Condition -> . ArithmeticOp LESS ArithmeticOp
    (74) Condition -> . ID LESS ID
    (75) Condition -> . ArithmeticOp LESS ID
    (76) Condition -> . ID LESS ArithmeticOp
    (77) Condition -> . BOOL
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 34
    BOOL            shift and go to state 35
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    Condition                      shift and go to state 32
    ArithmeticOp                   shift and go to state 33
    Assignable                     shift and go to state 23

state 18

    (2) InstructionList -> Instruction END InstructionList .

    $end            reduce using rule 2 (InstructionList -> Instruction END InstructionList .)
    RBRACE          reduce using rule 2 (InstructionList -> Instruction END InstructionList .)


state 19

    (25) Instruction -> TYPE ID LBRACE . Lsystem_body RBRACE
    (32) Instruction -> TYPE ID LBRACE . Brush_body RBRACE
    (37) Instruction -> TYPE ID LBRACE . Canvas_body RBRACE
    (28) Lsystem_body -> . AXIOM TWOPOINTS STRING COMMA Ls_rules
    (33) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> . SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (35) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> . SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (38) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (39) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> . HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> . HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    AXIOM           shift and go to state 39
    SIZE            shift and go to state 40
    HIGH            shift and go to state 41

    Lsystem_body                   shift and go to state 36
    Brush_body                     shift and go to state 37
    Canvas_body                    shift and go to state 38

state 20

    (27) Instruction -> TYPE ID EQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 21
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 42
    Assignable                     shift and go to state 23

state 21

    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 22

    (26) Instruction -> ID EQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 26 (Instruction -> ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 23

    (24) ArithmeticOp -> Assignable .

    PLUS            reduce using rule 24 (ArithmeticOp -> Assignable .)
    MINUS           reduce using rule 24 (ArithmeticOp -> Assignable .)
    MULTIPLY        reduce using rule 24 (ArithmeticOp -> Assignable .)
    DIFFER          reduce using rule 24 (ArithmeticOp -> Assignable .)
    END             reduce using rule 24 (ArithmeticOp -> Assignable .)
    GEQUAL          reduce using rule 24 (ArithmeticOp -> Assignable .)
    LEQUAL          reduce using rule 24 (ArithmeticOp -> Assignable .)
    EQUALEQUAL      reduce using rule 24 (ArithmeticOp -> Assignable .)
    GREATER         reduce using rule 24 (ArithmeticOp -> Assignable .)
    LESS            reduce using rule 24 (ArithmeticOp -> Assignable .)
    RPAREN          reduce using rule 24 (ArithmeticOp -> Assignable .)


state 24

    (4) Assignable -> INT .

    PLUS            reduce using rule 4 (Assignable -> INT .)
    MINUS           reduce using rule 4 (Assignable -> INT .)
    MULTIPLY        reduce using rule 4 (Assignable -> INT .)
    DIFFER          reduce using rule 4 (Assignable -> INT .)
    END             reduce using rule 4 (Assignable -> INT .)
    GEQUAL          reduce using rule 4 (Assignable -> INT .)
    LEQUAL          reduce using rule 4 (Assignable -> INT .)
    EQUALEQUAL      reduce using rule 4 (Assignable -> INT .)
    GREATER         reduce using rule 4 (Assignable -> INT .)
    LESS            reduce using rule 4 (Assignable -> INT .)
    RPAREN          reduce using rule 4 (Assignable -> INT .)


state 25

    (5) Assignable -> FLOAT .

    PLUS            reduce using rule 5 (Assignable -> FLOAT .)
    MINUS           reduce using rule 5 (Assignable -> FLOAT .)
    MULTIPLY        reduce using rule 5 (Assignable -> FLOAT .)
    DIFFER          reduce using rule 5 (Assignable -> FLOAT .)
    END             reduce using rule 5 (Assignable -> FLOAT .)
    GEQUAL          reduce using rule 5 (Assignable -> FLOAT .)
    LEQUAL          reduce using rule 5 (Assignable -> FLOAT .)
    EQUALEQUAL      reduce using rule 5 (Assignable -> FLOAT .)
    GREATER         reduce using rule 5 (Assignable -> FLOAT .)
    LESS            reduce using rule 5 (Assignable -> FLOAT .)
    RPAREN          reduce using rule 5 (Assignable -> FLOAT .)


state 26

    (6) Assignable -> STRING .

    PLUS            reduce using rule 6 (Assignable -> STRING .)
    MINUS           reduce using rule 6 (Assignable -> STRING .)
    MULTIPLY        reduce using rule 6 (Assignable -> STRING .)
    DIFFER          reduce using rule 6 (Assignable -> STRING .)
    END             reduce using rule 6 (Assignable -> STRING .)
    GEQUAL          reduce using rule 6 (Assignable -> STRING .)
    LEQUAL          reduce using rule 6 (Assignable -> STRING .)
    EQUALEQUAL      reduce using rule 6 (Assignable -> STRING .)
    GREATER         reduce using rule 6 (Assignable -> STRING .)
    LESS            reduce using rule 6 (Assignable -> STRING .)
    RPAREN          reduce using rule 6 (Assignable -> STRING .)


state 27

    (7) Assignable -> COL .

    PLUS            reduce using rule 7 (Assignable -> COL .)
    MINUS           reduce using rule 7 (Assignable -> COL .)
    MULTIPLY        reduce using rule 7 (Assignable -> COL .)
    DIFFER          reduce using rule 7 (Assignable -> COL .)
    END             reduce using rule 7 (Assignable -> COL .)
    GEQUAL          reduce using rule 7 (Assignable -> COL .)
    LEQUAL          reduce using rule 7 (Assignable -> COL .)
    EQUALEQUAL      reduce using rule 7 (Assignable -> COL .)
    GREATER         reduce using rule 7 (Assignable -> COL .)
    LESS            reduce using rule 7 (Assignable -> COL .)
    RPAREN          reduce using rule 7 (Assignable -> COL .)


state 28

    (31) Instruction -> ADD_RULE LPAREN ID . COMMA STRING COMMA STRING RPAREN

    COMMA           shift and go to state 51


state 29

    (42) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID . COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 52


state 30

    (54) Instruction -> REPEAT INT LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    InstructionList                shift and go to state 53
    Instruction                    shift and go to state 3

state 31

    (55) Instruction -> REPEAT ID LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    InstructionList                shift and go to state 54
    Instruction                    shift and go to state 3

state 32

    (56) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> IF LPAREN Condition . RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    RPAREN          shift and go to state 55


state 33

    (58) Condition -> ArithmeticOp . GEQUAL ArithmeticOp
    (61) Condition -> ArithmeticOp . GEQUAL ID
    (64) Condition -> ArithmeticOp . LEQUAL ID
    (65) Condition -> ArithmeticOp . EQUALEQUAL ArithmeticOp
    (68) Condition -> ArithmeticOp . EQUALEQUAL ID
    (69) Condition -> ArithmeticOp . GREATER ArithmeticOp
    (72) Condition -> ArithmeticOp . GREATER ID
    (73) Condition -> ArithmeticOp . LESS ArithmeticOp
    (75) Condition -> ArithmeticOp . LESS ID
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    GEQUAL          shift and go to state 56
    LEQUAL          shift and go to state 57
    EQUALEQUAL      shift and go to state 58
    GREATER         shift and go to state 59
    LESS            shift and go to state 60
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 34

    (59) Condition -> ID . GEQUAL ID
    (60) Condition -> ID . GEQUAL ArithmeticOp
    (62) Condition -> ID . LEQUAL ID
    (63) Condition -> ID . LEQUAL ArithmeticOp
    (66) Condition -> ID . EQUALEQUAL ID
    (67) Condition -> ID . EQUALEQUAL ArithmeticOp
    (70) Condition -> ID . GREATER ID
    (71) Condition -> ID . GREATER ArithmeticOp
    (74) Condition -> ID . LESS ID
    (76) Condition -> ID . LESS ArithmeticOp
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    GEQUAL          shift and go to state 61
    LEQUAL          shift and go to state 62
    EQUALEQUAL      shift and go to state 63
    GREATER         shift and go to state 64
    LESS            shift and go to state 65
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 35

    (77) Condition -> BOOL .

    RPAREN          reduce using rule 77 (Condition -> BOOL .)


state 36

    (25) Instruction -> TYPE ID LBRACE Lsystem_body . RBRACE

    RBRACE          shift and go to state 66


state 37

    (32) Instruction -> TYPE ID LBRACE Brush_body . RBRACE

    RBRACE          shift and go to state 67


state 38

    (37) Instruction -> TYPE ID LBRACE Canvas_body . RBRACE

    RBRACE          shift and go to state 68


state 39

    (28) Lsystem_body -> AXIOM . TWOPOINTS STRING COMMA Ls_rules

    TWOPOINTS       shift and go to state 69


state 40

    (33) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE . TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (35) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE . TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 70


state 41

    (38) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (39) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH . TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH . TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 71


state 42

    (27) Instruction -> TYPE ID EQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    END             reduce using rule 27 (Instruction -> TYPE ID EQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 43

    (9) ArithmeticOp -> ID PLUS . ID
    (10) ArithmeticOp -> ID PLUS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 72
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 73
    Assignable                     shift and go to state 23

state 44

    (13) ArithmeticOp -> ID MINUS . ID
    (14) ArithmeticOp -> ID MINUS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 74
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 75
    Assignable                     shift and go to state 23

state 45

    (17) ArithmeticOp -> ID MULTIPLY . ID
    (18) ArithmeticOp -> ID MULTIPLY . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 76
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 77
    Assignable                     shift and go to state 23

state 46

    (21) ArithmeticOp -> ID DIFFER . ID
    (23) ArithmeticOp -> ID DIFFER . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 78
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 79
    Assignable                     shift and go to state 23

state 47

    (8) ArithmeticOp -> ArithmeticOp PLUS . ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp PLUS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 81
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 80
    Assignable                     shift and go to state 23

state 48

    (12) ArithmeticOp -> ArithmeticOp MINUS . ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp MINUS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 83
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 82
    Assignable                     shift and go to state 23

state 49

    (16) ArithmeticOp -> ArithmeticOp MULTIPLY . ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp MULTIPLY . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 85
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 84
    Assignable                     shift and go to state 23

state 50

    (20) ArithmeticOp -> ArithmeticOp DIFFER . ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp DIFFER . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 87
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 86
    Assignable                     shift and go to state 23

state 51

    (31) Instruction -> ADD_RULE LPAREN ID COMMA . STRING COMMA STRING RPAREN

    STRING          shift and go to state 88


state 52

    (42) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA . ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 89


state 53

    (54) Instruction -> REPEAT INT LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 90


state 54

    (55) Instruction -> REPEAT ID LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 91


state 55

    (56) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE
    (57) Instruction -> IF LPAREN Condition RPAREN . LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 92


state 56

    (58) Condition -> ArithmeticOp GEQUAL . ArithmeticOp
    (61) Condition -> ArithmeticOp GEQUAL . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 94
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 93
    Assignable                     shift and go to state 23

state 57

    (64) Condition -> ArithmeticOp LEQUAL . ID

    ID              shift and go to state 95


state 58

    (65) Condition -> ArithmeticOp EQUALEQUAL . ArithmeticOp
    (68) Condition -> ArithmeticOp EQUALEQUAL . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 97
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 96
    Assignable                     shift and go to state 23

state 59

    (69) Condition -> ArithmeticOp GREATER . ArithmeticOp
    (72) Condition -> ArithmeticOp GREATER . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 99
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 98
    Assignable                     shift and go to state 23

state 60

    (73) Condition -> ArithmeticOp LESS . ArithmeticOp
    (75) Condition -> ArithmeticOp LESS . ID
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 101
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 100
    Assignable                     shift and go to state 23

state 61

    (59) Condition -> ID GEQUAL . ID
    (60) Condition -> ID GEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 102
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 103
    Assignable                     shift and go to state 23

state 62

    (62) Condition -> ID LEQUAL . ID
    (63) Condition -> ID LEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 104
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 105
    Assignable                     shift and go to state 23

state 63

    (66) Condition -> ID EQUALEQUAL . ID
    (67) Condition -> ID EQUALEQUAL . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 106
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 107
    Assignable                     shift and go to state 23

state 64

    (70) Condition -> ID GREATER . ID
    (71) Condition -> ID GREATER . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 108
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 109
    Assignable                     shift and go to state 23

state 65

    (74) Condition -> ID LESS . ID
    (76) Condition -> ID LESS . ArithmeticOp
    (8) ArithmeticOp -> . ArithmeticOp PLUS ArithmeticOp
    (9) ArithmeticOp -> . ID PLUS ID
    (10) ArithmeticOp -> . ID PLUS ArithmeticOp
    (11) ArithmeticOp -> . ArithmeticOp PLUS ID
    (12) ArithmeticOp -> . ArithmeticOp MINUS ArithmeticOp
    (13) ArithmeticOp -> . ID MINUS ID
    (14) ArithmeticOp -> . ID MINUS ArithmeticOp
    (15) ArithmeticOp -> . ArithmeticOp MINUS ID
    (16) ArithmeticOp -> . ArithmeticOp MULTIPLY ArithmeticOp
    (17) ArithmeticOp -> . ID MULTIPLY ID
    (18) ArithmeticOp -> . ID MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> . ArithmeticOp MULTIPLY ID
    (20) ArithmeticOp -> . ArithmeticOp DIFFER ArithmeticOp
    (21) ArithmeticOp -> . ID DIFFER ID
    (22) ArithmeticOp -> . ArithmeticOp DIFFER ID
    (23) ArithmeticOp -> . ID DIFFER ArithmeticOp
    (24) ArithmeticOp -> . Assignable
    (4) Assignable -> . INT
    (5) Assignable -> . FLOAT
    (6) Assignable -> . STRING
    (7) Assignable -> . COL

    ID              shift and go to state 110
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    COL             shift and go to state 27

    ArithmeticOp                   shift and go to state 111
    Assignable                     shift and go to state 23

state 66

    (25) Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .

    END             reduce using rule 25 (Instruction -> TYPE ID LBRACE Lsystem_body RBRACE .)


state 67

    (32) Instruction -> TYPE ID LBRACE Brush_body RBRACE .

    END             reduce using rule 32 (Instruction -> TYPE ID LBRACE Brush_body RBRACE .)


state 68

    (37) Instruction -> TYPE ID LBRACE Canvas_body RBRACE .

    END             reduce using rule 37 (Instruction -> TYPE ID LBRACE Canvas_body RBRACE .)


state 69

    (28) Lsystem_body -> AXIOM TWOPOINTS . STRING COMMA Ls_rules

    STRING          shift and go to state 112


state 70

    (33) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS . INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID
    (35) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS . ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    INT             shift and go to state 113
    ID              shift and go to state 114


state 71

    (38) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (39) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS . INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS . ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 115
    ID              shift and go to state 116


state 72

    (9) ArithmeticOp -> ID PLUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    GEQUAL          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    LEQUAL          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    EQUALEQUAL      reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    GREATER         reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    LESS            reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    RPAREN          reduce using rule 9 (ArithmeticOp -> ID PLUS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]
  ! DIFFER          [ reduce using rule 9 (ArithmeticOp -> ID PLUS ID .) ]


state 73

    (10) ArithmeticOp -> ID PLUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    GREATER         reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    LESS            reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    RPAREN          reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 10 (ArithmeticOp -> ID PLUS ArithmeticOp .) ]


state 74

    (13) ArithmeticOp -> ID MINUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    GEQUAL          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    LEQUAL          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    EQUALEQUAL      reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    GREATER         reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    LESS            reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    RPAREN          reduce using rule 13 (ArithmeticOp -> ID MINUS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! MINUS           [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]
  ! DIFFER          [ reduce using rule 13 (ArithmeticOp -> ID MINUS ID .) ]


state 75

    (14) ArithmeticOp -> ID MINUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    GREATER         reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    LESS            reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    RPAREN          reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 14 (ArithmeticOp -> ID MINUS ArithmeticOp .) ]


state 76

    (17) ArithmeticOp -> ID MULTIPLY ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    GEQUAL          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    LEQUAL          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    GREATER         reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    LESS            reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    RPAREN          reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 17 (ArithmeticOp -> ID MULTIPLY ID .) ]


state 77

    (18) ArithmeticOp -> ID MULTIPLY ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 18 (ArithmeticOp -> ID MULTIPLY ArithmeticOp .) ]


state 78

    (21) ArithmeticOp -> ID DIFFER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    GEQUAL          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    LEQUAL          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    EQUALEQUAL      reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    GREATER         reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    LESS            reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    RPAREN          reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MINUS           [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 21 (ArithmeticOp -> ID DIFFER ID .) ]


state 79

    (23) ArithmeticOp -> ID DIFFER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    GREATER         reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    LESS            reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 23 (ArithmeticOp -> ID DIFFER ArithmeticOp .) ]


state 80

    (8) ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GEQUAL          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LEQUAL          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    GREATER         reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    LESS            reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    RPAREN          reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 8 (ArithmeticOp -> ArithmeticOp PLUS ArithmeticOp .) ]


state 81

    (11) ArithmeticOp -> ArithmeticOp PLUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GEQUAL          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LEQUAL          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    EQUALEQUAL      reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    GREATER         reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    LESS            reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    RPAREN          reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MINUS           [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! MULTIPLY        [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]
  ! DIFFER          [ reduce using rule 11 (ArithmeticOp -> ArithmeticOp PLUS ID .) ]


state 82

    (12) ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GEQUAL          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LEQUAL          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    EQUALEQUAL      reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    GREATER         reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    LESS            reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    RPAREN          reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 12 (ArithmeticOp -> ArithmeticOp MINUS ArithmeticOp .) ]


state 83

    (15) ArithmeticOp -> ArithmeticOp MINUS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GEQUAL          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LEQUAL          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    EQUALEQUAL      reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    GREATER         reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    LESS            reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    RPAREN          reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MINUS           [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! MULTIPLY        [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]
  ! DIFFER          [ reduce using rule 15 (ArithmeticOp -> ArithmeticOp MINUS ID .) ]


state 84

    (16) ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GEQUAL          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LEQUAL          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    EQUALEQUAL      reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    GREATER         reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    LESS            reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    RPAREN          reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 16 (ArithmeticOp -> ArithmeticOp MULTIPLY ArithmeticOp .) ]


state 85

    (19) ArithmeticOp -> ArithmeticOp MULTIPLY ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GEQUAL          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LEQUAL          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    EQUALEQUAL      reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    GREATER         reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    LESS            reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    RPAREN          reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MINUS           [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! MULTIPLY        [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]
  ! DIFFER          [ reduce using rule 19 (ArithmeticOp -> ArithmeticOp MULTIPLY ID .) ]


state 86

    (20) ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GEQUAL          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LEQUAL          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    EQUALEQUAL      reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    GREATER         reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    LESS            reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    RPAREN          reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50

  ! PLUS            [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! MINUS           [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! MULTIPLY        [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]
  ! DIFFER          [ reduce using rule 20 (ArithmeticOp -> ArithmeticOp DIFFER ArithmeticOp .) ]


state 87

    (22) ArithmeticOp -> ArithmeticOp DIFFER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIFFER resolved as shift
    END             reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LEQUAL          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    EQUALEQUAL      reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    GREATER         reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    LESS            reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    RPAREN          reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46

  ! PLUS            [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MINUS           [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! MULTIPLY        [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]
  ! DIFFER          [ reduce using rule 22 (ArithmeticOp -> ArithmeticOp DIFFER ID .) ]


state 88

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING . COMMA STRING RPAREN

    COMMA           shift and go to state 117


state 89

    (42) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID . COMMA ID COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 118


state 90

    (54) Instruction -> REPEAT INT LBRACE InstructionList RBRACE .

    END             reduce using rule 54 (Instruction -> REPEAT INT LBRACE InstructionList RBRACE .)


state 91

    (55) Instruction -> REPEAT ID LBRACE InstructionList RBRACE .

    END             reduce using rule 55 (Instruction -> REPEAT ID LBRACE InstructionList RBRACE .)


state 92

    (56) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE
    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE . InstructionList RBRACE ELSE LBRACE InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    InstructionList                shift and go to state 119
    Instruction                    shift and go to state 3

state 93

    (58) Condition -> ArithmeticOp GEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 58 (Condition -> ArithmeticOp GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 94

    (61) Condition -> ArithmeticOp GEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 61 (Condition -> ArithmeticOp GEQUAL ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 95

    (64) Condition -> ArithmeticOp LEQUAL ID .

    RPAREN          reduce using rule 64 (Condition -> ArithmeticOp LEQUAL ID .)


state 96

    (65) Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 65 (Condition -> ArithmeticOp EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 97

    (68) Condition -> ArithmeticOp EQUALEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 68 (Condition -> ArithmeticOp EQUALEQUAL ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 98

    (69) Condition -> ArithmeticOp GREATER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 69 (Condition -> ArithmeticOp GREATER ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 99

    (72) Condition -> ArithmeticOp GREATER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 72 (Condition -> ArithmeticOp GREATER ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 100

    (73) Condition -> ArithmeticOp LESS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 73 (Condition -> ArithmeticOp LESS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 101

    (75) Condition -> ArithmeticOp LESS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 75 (Condition -> ArithmeticOp LESS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 102

    (59) Condition -> ID GEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 59 (Condition -> ID GEQUAL ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 103

    (60) Condition -> ID GEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 60 (Condition -> ID GEQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 104

    (62) Condition -> ID LEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 62 (Condition -> ID LEQUAL ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 105

    (63) Condition -> ID LEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 63 (Condition -> ID LEQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 106

    (66) Condition -> ID EQUALEQUAL ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 66 (Condition -> ID EQUALEQUAL ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 107

    (67) Condition -> ID EQUALEQUAL ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 67 (Condition -> ID EQUALEQUAL ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 108

    (70) Condition -> ID GREATER ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 70 (Condition -> ID GREATER ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 109

    (71) Condition -> ID GREATER ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 71 (Condition -> ID GREATER ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 110

    (74) Condition -> ID LESS ID .
    (9) ArithmeticOp -> ID . PLUS ID
    (10) ArithmeticOp -> ID . PLUS ArithmeticOp
    (13) ArithmeticOp -> ID . MINUS ID
    (14) ArithmeticOp -> ID . MINUS ArithmeticOp
    (17) ArithmeticOp -> ID . MULTIPLY ID
    (18) ArithmeticOp -> ID . MULTIPLY ArithmeticOp
    (21) ArithmeticOp -> ID . DIFFER ID
    (23) ArithmeticOp -> ID . DIFFER ArithmeticOp

    RPAREN          reduce using rule 74 (Condition -> ID LESS ID .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIFFER          shift and go to state 46


state 111

    (76) Condition -> ID LESS ArithmeticOp .
    (8) ArithmeticOp -> ArithmeticOp . PLUS ArithmeticOp
    (11) ArithmeticOp -> ArithmeticOp . PLUS ID
    (12) ArithmeticOp -> ArithmeticOp . MINUS ArithmeticOp
    (15) ArithmeticOp -> ArithmeticOp . MINUS ID
    (16) ArithmeticOp -> ArithmeticOp . MULTIPLY ArithmeticOp
    (19) ArithmeticOp -> ArithmeticOp . MULTIPLY ID
    (20) ArithmeticOp -> ArithmeticOp . DIFFER ArithmeticOp
    (22) ArithmeticOp -> ArithmeticOp . DIFFER ID

    RPAREN          reduce using rule 76 (Condition -> ID LESS ArithmeticOp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    MULTIPLY        shift and go to state 49
    DIFFER          shift and go to state 50


state 112

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING . COMMA Ls_rules

    COMMA           shift and go to state 120


state 113

    (33) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 121


state 114

    (35) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID . COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 122


state 115

    (38) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS INT . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 123


state 116

    (39) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS ID . COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 124


state 117

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA . STRING RPAREN

    STRING          shift and go to state 125


state 118

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA . ID COMMA INT COMMA ID COMMA ID RPAREN

    ID              shift and go to state 126


state 119

    (56) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE
    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList . RBRACE ELSE LBRACE InstructionList RBRACE

    RBRACE          shift and go to state 127


state 120

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA . Ls_rules
    (29) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 128

    Ls_rules                       shift and go to state 129

state 121

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 130


state 122

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA . COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    COLOR           shift and go to state 131


state 123

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    WIDTH           shift and go to state 132


state 124

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA . WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    WIDTH           shift and go to state 133


state 125

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING . RPAREN

    RPAREN          shift and go to state 134


state 126

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID . COMMA INT COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 135


state 127

    (56) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .
    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE . ELSE LBRACE InstructionList RBRACE

    END             reduce using rule 56 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE .)
    ELSE            shift and go to state 136


state 128

    (29) Ls_rules -> STRING . ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> STRING . ARROW STRING

    ARROW           shift and go to state 137


state 129

    (28) Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .

    RBRACE          reduce using rule 28 (Lsystem_body -> AXIOM TWOPOINTS STRING COMMA Ls_rules .)


state 130

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 138


state 131

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR . TWOPOINTS COL COMMA SPEED TWOPOINTS ID

    TWOPOINTS       shift and go to state 139


state 132

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 140


state 133

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH . TWOPOINTS INT COMMA COLOR TWOPOINTS COL

    TWOPOINTS       shift and go to state 141


state 134

    (31) Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN .

    END             reduce using rule 31 (Instruction -> ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN .)


state 135

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA . INT COMMA ID COMMA ID RPAREN

    INT             shift and go to state 143
    ID              shift and go to state 142


state 136

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE . LBRACE InstructionList RBRACE

    LBRACE          shift and go to state 144


state 137

    (29) Ls_rules -> STRING ARROW . STRING COMMA Ls_rules
    (30) Ls_rules -> STRING ARROW . STRING

    STRING          shift and go to state 145


state 138

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 146


state 139

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS . COL COMMA SPEED TWOPOINTS ID

    COL             shift and go to state 147


state 140

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL
    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL

    INT             shift and go to state 148
    ID              shift and go to state 149


state 141

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . ID COMMA COLOR TWOPOINTS COL
    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS . INT COMMA COLOR TWOPOINTS COL

    ID              shift and go to state 150
    INT             shift and go to state 151


state 142

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA INT RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA INT COMMA ID RPAREN

    COMMA           shift and go to state 152


state 143

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT . COMMA ID COMMA ID RPAREN

    COMMA           shift and go to state 153


state 144

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE . InstructionList RBRACE
    (2) InstructionList -> . Instruction END InstructionList
    (3) InstructionList -> . Instruction END
    (25) Instruction -> . TYPE ID LBRACE Lsystem_body RBRACE
    (26) Instruction -> . ID EQUAL ArithmeticOp
    (27) Instruction -> . TYPE ID EQUAL ArithmeticOp
    (31) Instruction -> . ADD_RULE LPAREN ID COMMA STRING COMMA STRING RPAREN
    (32) Instruction -> . TYPE ID LBRACE Brush_body RBRACE
    (37) Instruction -> . TYPE ID LBRACE Canvas_body RBRACE
    (42) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN
    (43) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN
    (44) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN
    (45) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN
    (46) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN
    (47) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN
    (48) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN
    (49) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN
    (50) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN
    (51) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN
    (52) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN
    (53) Instruction -> . DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN
    (54) Instruction -> . REPEAT INT LBRACE InstructionList RBRACE
    (55) Instruction -> . REPEAT ID LBRACE InstructionList RBRACE
    (56) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE
    (57) Instruction -> . IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE

    TYPE            shift and go to state 4
    ID              shift and go to state 5
    ADD_RULE        shift and go to state 6
    DRAW            shift and go to state 7
    REPEAT          shift and go to state 8
    IF              shift and go to state 9

    InstructionList                shift and go to state 154
    Instruction                    shift and go to state 3

state 145

    (29) Ls_rules -> STRING ARROW STRING . COMMA Ls_rules
    (30) Ls_rules -> STRING ARROW STRING .

    COMMA           shift and go to state 155
    RBRACE          reduce using rule 30 (Ls_rules -> STRING ARROW STRING .)


state 146

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 156


state 147

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL . COMMA SPEED TWOPOINTS ID

    COMMA           shift and go to state 157


state 148

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 158


state 149

    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 159


state 150

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 160


state 151

    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT . COMMA COLOR TWOPOINTS COL

    COMMA           shift and go to state 161


state 152

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN
    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA INT RPAREN
    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA INT RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . FLOAT COMMA ID RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . INT COMMA ID RPAREN

    ID              shift and go to state 162
    FLOAT           shift and go to state 163
    INT             shift and go to state 164


state 153

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA INT RPAREN
    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA INT RPAREN
    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . FLOAT COMMA ID RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . INT COMMA ID RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA . ID COMMA ID RPAREN

    FLOAT           shift and go to state 167
    INT             shift and go to state 166
    ID              shift and go to state 165


state 154

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList . RBRACE

    RBRACE          shift and go to state 168


state 155

    (29) Ls_rules -> STRING ARROW STRING COMMA . Ls_rules
    (29) Ls_rules -> . STRING ARROW STRING COMMA Ls_rules
    (30) Ls_rules -> . STRING ARROW STRING

    STRING          shift and go to state 128

    Ls_rules                       shift and go to state 169

state 156

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 170


state 157

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA . SPEED TWOPOINTS ID

    SPEED           shift and go to state 171


state 158

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 172


state 159

    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 173


state 160

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 174


state 161

    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA . COLOR TWOPOINTS COL

    COLOR           shift and go to state 175


state 162

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . COMMA INT RPAREN

    COMMA           shift and go to state 176


state 163

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 177


state 164

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 178


state 165

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID . COMMA ID RPAREN

    COMMA           shift and go to state 179


state 166

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT . COMMA ID RPAREN

    COMMA           shift and go to state 180


state 167

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT . COMMA ID RPAREN

    COMMA           shift and go to state 181


state 168

    (57) Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .

    END             reduce using rule 57 (Instruction -> IF LPAREN Condition RPAREN LBRACE InstructionList RBRACE ELSE LBRACE InstructionList RBRACE .)


state 169

    (29) Ls_rules -> STRING ARROW STRING COMMA Ls_rules .

    RBRACE          reduce using rule 29 (Ls_rules -> STRING ARROW STRING COMMA Ls_rules .)


state 170

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 182


state 171

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED . TWOPOINTS ID

    TWOPOINTS       shift and go to state 183


state 172

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 184


state 173

    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 185


state 174

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 186


state 175

    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR . TWOPOINTS COL

    TWOPOINTS       shift and go to state 187


state 176

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN
    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA . INT RPAREN

    ID              shift and go to state 188
    INT             shift and go to state 189


state 177

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . INT RPAREN
    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 191
    ID              shift and go to state 190


state 178

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . INT RPAREN
    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 193
    ID              shift and go to state 192


state 179

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . INT RPAREN
    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA . ID RPAREN

    INT             shift and go to state 195
    ID              shift and go to state 194


state 180

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . INT RPAREN
    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA . ID RPAREN

    INT             shift and go to state 197
    ID              shift and go to state 196


state 181

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . INT RPAREN
    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA . ID RPAREN

    INT             shift and go to state 199
    ID              shift and go to state 198


state 182

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 200
    ID              shift and go to state 201


state 183

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . INT
    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS . ID

    INT             shift and go to state 203
    ID              shift and go to state 202


state 184

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 204


state 185

    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 205


state 186

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 206


state 187

    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS . COL

    COL             shift and go to state 207


state 188

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 208


state 189

    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 209


state 190

    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 210


state 191

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 211


state 192

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 212


state 193

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 213


state 194

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID . RPAREN

    RPAREN          shift and go to state 214


state 195

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT . RPAREN

    RPAREN          shift and go to state 215


state 196

    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID . RPAREN

    RPAREN          shift and go to state 216


state 197

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT . RPAREN

    RPAREN          shift and go to state 217


state 198

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID . RPAREN

    RPAREN          shift and go to state 218


state 199

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT . RPAREN

    RPAREN          shift and go to state 219


state 200

    (33) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 33 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 201

    (34) Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 34 (Brush_body -> SIZE TWOPOINTS INT COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 202

    (36) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .

    RBRACE          reduce using rule 36 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS ID .)


state 203

    (35) Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .

    RBRACE          reduce using rule 35 (Brush_body -> SIZE TWOPOINTS ID COMMA COLOR TWOPOINTS COL COMMA SPEED TWOPOINTS INT .)


state 204

    (38) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 38 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 205

    (40) Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 40 (Canvas_body -> HIGH TWOPOINTS INT COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 206

    (39) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 39 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS ID COMMA COLOR TWOPOINTS COL .)


state 207

    (41) Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .

    RBRACE          reduce using rule 41 (Canvas_body -> HIGH TWOPOINTS ID COMMA WIDTH TWOPOINTS INT COMMA COLOR TWOPOINTS COL .)


state 208

    (44) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .

    END             reduce using rule 44 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN .)


state 209

    (50) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .

    END             reduce using rule 50 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID COMMA INT RPAREN .)


state 210

    (51) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 51 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA ID RPAREN .)


state 211

    (45) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 45 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA FLOAT COMMA INT RPAREN .)


state 212

    (52) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .

    END             reduce using rule 52 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA ID RPAREN .)


state 213

    (46) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .

    END             reduce using rule 46 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA ID COMMA INT COMMA INT RPAREN .)


state 214

    (53) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .

    END             reduce using rule 53 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA ID RPAREN .)


state 215

    (47) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .

    END             reduce using rule 47 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA ID COMMA INT RPAREN .)


state 216

    (49) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .

    END             reduce using rule 49 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA ID RPAREN .)


state 217

    (43) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .

    END             reduce using rule 43 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA INT COMMA INT RPAREN .)


state 218

    (48) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .

    END             reduce using rule 48 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA ID RPAREN .)


state 219

    (42) Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .

    END             reduce using rule 42 (Instruction -> DRAW LPAREN ID COMMA ID COMMA ID COMMA INT COMMA FLOAT COMMA INT RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 72 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 73 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 74 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 75 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 76 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 77 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 79 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 80 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 82 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 84 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 85 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 86 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 87 resolved as shift
WARNING: shift/reduce conflict for DIFFER in state 87 resolved as shift
